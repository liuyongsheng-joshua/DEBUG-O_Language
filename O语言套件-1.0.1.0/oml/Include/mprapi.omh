引用段
{
函数 CompressPhoneNumber(整数32,整数32)=>整数32;
函数 MprAdminBufferFree(整数32)=>整数32;
函数 MprAdminConnectionClearStats(整数32,整数32)=>整数32;
函数 MprAdminConnectionEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminConnectionGetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminConnectionRemoveQuarantine(整数32,整数32,整数32)=>整数32;
函数 MprAdminDeregisterConnectionNotification(整数32,整数32)=>整数32;
函数 MprAdminDeviceEnum(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminEstablishDomainRasServer(整数32,整数32,整数32)=>整数32;
函数 MprAdminGetErrorString(整数32,整数32)=>整数32;
函数 MprAdminGetPDCServer(整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceConnect(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceCreate(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceDelete(整数32,整数32)=>整数32;
函数 MprAdminInterfaceDeviceGetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceDeviceSetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceDisconnect(整数32,整数32)=>整数32;
函数 MprAdminInterfaceEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceGetCredentials(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceGetCredentialsEx(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceGetHandle(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceGetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceQueryUpdateResult(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceSetCredentials(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceSetCredentialsEx(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceSetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceTransportAdd(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceTransportGetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceTransportRemove(整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceTransportSetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminInterfaceUpdatePhonebookInfo(整数32,整数32)=>整数32;
函数 MprAdminInterfaceUpdateRoutes(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminIsDomainRasServer(整数32,整数32,整数32)=>整数32;
函数 MprAdminIsServiceRunning(整数32)=>整数32;
函数 MprAdminMIBBufferFree(整数32)=>整数32;
函数 MprAdminMIBEntryCreate(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminMIBEntryDelete(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminMIBEntryGet(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminMIBEntryGetFirst(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminMIBEntryGetNext(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminMIBEntrySet(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminMIBServerConnect(整数32,整数32)=>整数32;
函数 MprAdminMIBServerDisconnect(整数32)=>整数32;
函数 MprAdminPortClearStats(整数32,整数32)=>整数32;
函数 MprAdminPortDisconnect(整数32,整数32)=>整数32;
函数 MprAdminPortEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminPortGetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminPortReset(整数32,整数32)=>整数32;
函数 MprAdminRegisterConnectionNotification(整数32,整数32)=>整数32;
函数 MprAdminSendUserMessage(整数32,整数32,整数32)=>整数32;
函数 MprAdminServerConnect(整数32,整数32)=>整数32;
函数 MprAdminServerDisconnect(整数32)=>整数32;
函数 MprAdminServerGetCredentials(整数32,整数32,整数32)=>整数32;
函数 MprAdminServerGetInfo(整数32,整数32,整数32)=>整数32;
函数 MprAdminServerSetCredentials(整数32,整数32,整数32)=>整数32;
函数 MprAdminServerSetInfo(整数32,整数32,整数32)=>整数32;
函数 MprAdminTransportCreate(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminTransportGetInfo(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminTransportSetInfo(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminUpgradeUsers(整数32,整数32)=>整数32;
函数 MprAdminUserClose(整数32)=>整数32;
函数 MprAdminUserGetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminUserOpen(整数32,整数32,整数32)=>整数32;
函数 MprAdminUserRead(整数32,整数32,整数32)=>整数32;
函数 MprAdminUserReadProfFlags(整数32,整数32)=>整数32;
函数 MprAdminUserServerConnect(整数32,整数32,整数32)=>整数32;
函数 MprAdminUserServerDisconnect(整数32)=>整数32;
函数 MprAdminUserSetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprAdminUserWrite(整数32,整数32,整数32)=>整数32;
函数 MprAdminUserWriteProfFlags(整数32,整数32)=>整数32;
函数 MprConfigBufferFree(整数32)=>整数32;
函数 MprConfigGetFriendlyName(整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigGetGuidName(整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceCreate(整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceDelete(整数32,整数32)=>整数32;
函数 MprConfigInterfaceEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceGetHandle(整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceGetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceSetInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceTransportAdd(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceTransportEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceTransportGetHandle(整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceTransportGetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceTransportRemove(整数32,整数32,整数32)=>整数32;
函数 MprConfigInterfaceTransportSetInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigServerBackup(整数32,整数32)=>整数32;
函数 MprConfigServerConnect(整数32,整数32)=>整数32;
函数 MprConfigServerDisconnect(整数32)=>整数32;
函数 MprConfigServerGetInfo(整数32,整数32,整数32)=>整数32;
函数 MprConfigServerInstall(整数32,整数32)=>整数32;
函数 MprConfigServerRefresh(整数32)=>整数32;
函数 MprConfigServerRestore(整数32,整数32)=>整数32;
函数 MprConfigServerSetInfo(整数32,整数32,整数32)=>整数32;
函数 MprConfigTransportCreate(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigTransportDelete(整数32,整数32)=>整数32;
函数 MprConfigTransportEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigTransportGetHandle(整数32,整数32,整数32)=>整数32;
函数 MprConfigTransportGetInfo(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprConfigTransportSetInfo(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprDomainQueryAccess(整数32,整数32)=>整数32;
函数 MprDomainQueryRasServer(整数32,整数32,整数32)=>整数32;
函数 MprDomainRegisterRasServer(整数32,整数32,整数32)=>整数32;
函数 MprDomainSetAccess(整数32,整数32)=>整数32;
函数 MprGetUsrParams(整数32,整数32,整数32)=>整数32;
函数 MprInfoBlockAdd(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprInfoBlockFind(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprInfoBlockQuerySize(整数32)=>整数32;
函数 MprInfoBlockRemove(整数32,整数32,整数32)=>整数32;
函数 MprInfoBlockSet(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MprInfoCreate(整数32,整数32)=>整数32;
函数 MprInfoDelete(整数32)=>整数32;
函数 MprInfoDuplicate(整数32,整数32)=>整数32;
函数 MprInfoRemoveAll(整数32,整数32)=>整数32;
函数 MprPortSetUsage(整数32)=>整数32;
函数 RasPrivilegeAndCallBackNumber(整数32,整数32)=>整数32;

}
