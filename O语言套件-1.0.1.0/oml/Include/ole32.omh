引用段
{
函数 BindMoniker(整数32,整数32,整数32,整数32)=>整数32;
函数 CLIPFORMAT_UserFree(整数32,整数32)=>整数32;
函数 CLIPFORMAT_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 CLIPFORMAT_UserSize(整数32,整数32,整数32)=>整数32;
函数 CLIPFORMAT_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 CLSIDFromProgID(整数32,整数32)=>整数32;
函数 CLSIDFromProgIDEx(整数32,整数32)=>整数32;
函数 CLSIDFromString(整数32,整数32)=>整数32;
函数 CoAddRefServerProcess()=>整数32;
函数 CoAllowSetForegroundWindow(整数32,整数32)=>整数32;
函数 CoBuildVersion()=>整数32;
函数 CoCancelCall(整数32,整数32)=>整数32;
函数 CoCopyProxy(整数32,整数32)=>整数32;
函数 CoCreateFreeThreadedMarshaler(整数32,整数32)=>整数32;
函数 CoCreateGuid(整数32)=>整数32;
函数 CoCreateInstance(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoCreateInstanceEx(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoCreateObjectInContext(整数32,整数32,整数32,整数32)=>整数32;
函数 CoDeactivateObject(整数32,整数32)=>整数32;
函数 CoDisableCallCancellation(整数32)=>整数32;
函数 CoDisconnectObject(整数32,整数32)=>整数32;
函数 CoDosDateTimeToFileTime(整数32,整数32,整数32)=>整数32;
函数 CoEnableCallCancellation(整数32)=>整数32;
函数 CoFileTimeNow(整数32)=>整数32;
函数 CoFileTimeToDosDateTime(整数32,整数32,整数32)=>整数32;
函数 CoFreeAllLibraries()=>整数32;
函数 CoFreeLibrary(整数32)=>整数32;
函数 CoFreeUnusedLibraries()=>整数32;
函数 CoFreeUnusedLibrariesEx(整数32,整数32)=>整数32;
函数 CoGetApartmentID(整数32,整数32)=>整数32;
函数 CoGetCallContext(整数32,整数32)=>整数32;
函数 CoGetCallerTID(整数32)=>整数32;
函数 CoGetCancelObject(整数32,整数32,整数32)=>整数32;
函数 CoGetClassObject(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetClassVersion(整数32,整数32,整数32)=>整数32;
函数 CoGetContextToken(整数32)=>整数32;
函数 CoGetCurrentLogicalThreadId(整数32)=>整数32;
函数 CoGetCurrentProcess()=>整数32;
函数 CoGetDefaultContext(整数32,整数32,整数32)=>整数32;
函数 CoGetInstanceFromFile(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetInstanceFromIStorage(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetInterceptor(整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetInterceptorFromTypeInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetInterfaceAndReleaseStream(整数32,整数32,整数32)=>整数32;
函数 CoGetMalloc(整数32,整数32)=>整数32;
函数 CoGetMarshalSizeMax(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetObject(整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetObjectContext(整数32,整数32)=>整数32;
函数 CoGetPSClsid(整数32,整数32)=>整数32;
函数 CoGetProcessIdentifier(整数32)=>整数32;
函数 CoGetStandardMarshal(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoGetState(整数32)=>整数32;
函数 CoGetStdMarshalEx(整数32,整数32,整数32)=>整数32;
函数 CoGetSystemSecurityPermissions(整数32,整数32)=>整数32;
函数 CoGetTreatAsClass(整数32,整数32)=>整数32;
函数 CoImpersonateClient()=>整数32;
函数 CoInitialize(整数32)=>整数32;
函数 CoInitializeEx(整数32,整数32)=>整数32;
函数 CoInitializeSecurity(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoInitializeWOW(整数32,整数32)=>整数32;
函数 CoInstall(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoInvalidateRemoteMachineBindings(整数32)=>整数32;
函数 CoIsHandlerConnected(整数32)=>整数32;
函数 CoIsOle1Class(整数32)=>整数32;
函数 CoLoadLibrary(整数32,整数32)=>整数32;
函数 CoLockObjectExternal(整数32,整数32,整数32)=>整数32;
函数 CoMarshalHresult(整数32,整数32)=>整数32;
函数 CoMarshalInterThreadInterfaceInStream(整数32,整数32,整数32)=>整数32;
函数 CoMarshalInterface(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoQueryAuthenticationServices(整数32,整数32)=>整数32;
函数 CoQueryClientBlanket(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoQueryProxyBlanket(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoQueryReleaseObject(整数32)=>整数32;
函数 CoReactivateObject(整数32,整数32)=>整数32;
函数 CoRegisterChannelHook(整数32,整数32)=>整数32;
函数 CoRegisterClassObject(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoRegisterInitializeSpy(整数32,整数32)=>整数32;
函数 CoRegisterMallocSpy(整数32)=>整数32;
函数 CoRegisterMessageFilter(整数32,整数32)=>整数32;
函数 CoRegisterPSClsid(整数32,整数32)=>整数32;
函数 CoRegisterSurrogate(整数32)=>整数32;
函数 CoRegisterSurrogateEx(整数32,整数32)=>整数32;
函数 CoReleaseMarshalData(整数32)=>整数32;
函数 CoReleaseServerProcess()=>整数32;
函数 CoResumeClassObjects()=>整数32;
函数 CoRetireServer(整数32)=>整数32;
函数 CoRevertToSelf()=>整数32;
函数 CoRevokeClassObject(整数32)=>整数32;
函数 CoRevokeInitializeSpy(整数32,整数32)=>整数32;
函数 CoRevokeMallocSpy()=>整数32;
函数 CoSetCancelObject(整数32)=>整数32;
函数 CoSetProxyBlanket(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CoSetState(整数32)=>整数32;
函数 CoSuspendClassObjects()=>整数32;
函数 CoSwitchCallContext(整数32,整数32)=>整数32;
函数 CoTaskMemAlloc(整数32)=>整数32;
函数 CoTaskMemFree(整数32)=>整数32;
函数 CoTaskMemRealloc(整数32,整数32)=>整数32;
函数 CoTestCancel()=>整数32;
函数 CoTreatAsClass(整数32,整数32)=>整数32;
函数 CoUninitialize()=>整数32;
函数 CoUnloadingWOW(整数32)=>整数32;
函数 CoUnmarshalHresult(整数32,整数32)=>整数32;
函数 CoUnmarshalInterface(整数32,整数32,整数32)=>整数32;
函数 CoWaitForMultipleHandles(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ComPs_NdrDllCanUnloadNow(整数32)=>整数32;
函数 ComPs_NdrDllGetClassObject(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ComPs_NdrDllRegisterProxy(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ComPs_NdrDllUnregisterProxy(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CreateAntiMoniker(整数32)=>整数32;
函数 CreateBindCtx(整数32,整数32)=>整数32;
函数 CreateClassMoniker(整数32,整数32)=>整数32;
函数 CreateDataAdviseHolder(整数32)=>整数32;
函数 CreateDataCache(整数32,整数32,整数32,整数32)=>整数32;
函数 CreateFileMoniker(整数32,整数32)=>整数32;
函数 CreateGenericComposite(整数32,整数32,整数32)=>整数32;
函数 CreateILockBytesOnHGlobal(整数32,整数32,整数32)=>整数32;
函数 CreateItemMoniker(整数32,整数32,整数32)=>整数32;
函数 CreateObjrefMoniker(整数32,整数32)=>整数32;
函数 CreateOleAdviseHolder(整数32)=>整数32;
函数 CreatePointerMoniker(整数32,整数32)=>整数32;
函数 CreateStdProgressIndicator(整数32,整数32,整数32,整数32)=>整数32;
函数 CreateStreamOnHGlobal(整数32,整数32,整数32)=>整数32;
函数 DcomChannelSetHResult(整数32,整数32,整数32)=>整数32;
函数 DllDebugObjectRPCHook(整数32,整数32)=>整数32;
函数 DllGetClassObjectWOW(整数32,整数32,整数32)=>整数32;
函数 DoDragDrop(整数32,整数32,整数32,整数32)=>整数32;
函数 EnableHookObject(整数32,整数32)=>整数32;
函数 FmtIdToPropStgName(整数32,整数32)=>整数32;
函数 FreePropVariantArray(整数32,整数32)=>整数32;
函数 GetClassFile(整数32,整数32)=>整数32;
函数 GetConvertStg(整数32)=>整数32;
函数 GetDocumentBitStg(整数32)=>整数32;
函数 GetHGlobalFromILockBytes(整数32,整数32)=>整数32;
函数 GetHGlobalFromStream(整数32,整数32)=>整数32;
函数 GetHookInterface(整数32)=>整数32;
函数 GetRunningObjectTable(整数32,整数32)=>整数32;
函数 HACCEL_UserFree(整数32,整数32)=>整数32;
函数 HACCEL_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HACCEL_UserSize(整数32,整数32,整数32)=>整数32;
函数 HACCEL_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HBITMAP_UserFree(整数32,整数32)=>整数32;
函数 HBITMAP_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HBITMAP_UserSize(整数32,整数32,整数32)=>整数32;
函数 HBITMAP_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HBRUSH_UserFree(整数32,整数32)=>整数32;
函数 HBRUSH_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HBRUSH_UserSize(整数32,整数32,整数32)=>整数32;
函数 HBRUSH_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HDC_UserFree(整数32,整数32)=>整数32;
函数 HDC_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HDC_UserSize(整数32,整数32,整数32)=>整数32;
函数 HDC_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HENHMETAFILE_UserFree(整数32,整数32)=>整数32;
函数 HENHMETAFILE_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HENHMETAFILE_UserSize(整数32,整数32,整数32)=>整数32;
函数 HENHMETAFILE_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HGLOBAL_UserFree(整数32,整数32)=>整数32;
函数 HGLOBAL_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HGLOBAL_UserSize(整数32,整数32,整数32)=>整数32;
函数 HGLOBAL_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HICON_UserFree(整数32,整数32)=>整数32;
函数 HICON_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HICON_UserSize(整数32,整数32,整数32)=>整数32;
函数 HICON_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HMENU_UserFree(整数32,整数32)=>整数32;
函数 HMENU_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HMENU_UserSize(整数32,整数32,整数32)=>整数32;
函数 HMENU_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HMETAFILEPICT_UserFree(整数32,整数32)=>整数32;
函数 HMETAFILEPICT_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HMETAFILEPICT_UserSize(整数32,整数32,整数32)=>整数32;
函数 HMETAFILEPICT_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HMETAFILE_UserFree(整数32,整数32)=>整数32;
函数 HMETAFILE_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HMETAFILE_UserSize(整数32,整数32,整数32)=>整数32;
函数 HMETAFILE_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HPALETTE_UserFree(整数32,整数32)=>整数32;
函数 HPALETTE_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HPALETTE_UserSize(整数32,整数32,整数32)=>整数32;
函数 HPALETTE_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HWND_UserFree(整数32,整数32)=>整数32;
函数 HWND_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 HWND_UserSize(整数32,整数32,整数32)=>整数32;
函数 HWND_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 HkOleRegisterObject(整数32,整数32,整数32,整数32)=>整数32;
函数 IIDFromString(整数32,整数32)=>整数32;
函数 IsAccelerator(整数32,整数32,整数32,整数32)=>整数32;
函数 IsEqualGUID(整数32,整数32)=>整数32;
函数 IsValidIid(整数32)=>整数32;
函数 IsValidInterface(整数32)=>整数32;
函数 IsValidPtrIn(整数32,整数32)=>整数32;
函数 IsValidPtrOut(整数32,整数32)=>整数32;
函数 MkParseDisplayName(整数32,整数32,整数32,整数32)=>整数32;
函数 MonikerCommonPrefixWith(整数32,整数32,整数32)=>整数32;
函数 MonikerRelativePathTo(整数32,整数32,整数32,整数32)=>整数32;
函数 OleBuildVersion()=>整数32;
函数 OleConvertIStorageToOLESTREAM(整数32,整数32)=>整数32;
函数 OleConvertIStorageToOLESTREAMEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleConvertOLESTREAMToIStorage(整数32,整数32,整数32)=>整数32;
函数 OleConvertOLESTREAMToIStorageEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreate(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateDefaultHandler(整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateEmbeddingHelper(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateFromData(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateFromDataEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateFromFile(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateFromFileEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateLink(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateLinkEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateLinkFromData(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateLinkFromDataEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateLinkToFile(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateLinkToFileEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleCreateMenuDescriptor(整数32,整数32)=>整数32;
函数 OleCreateStaticFromData(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleDestroyMenuDescriptor(整数32)=>整数32;
函数 OleDoAutoConvert(整数32,整数32)=>整数32;
函数 OleDraw(整数32,整数32,整数32,整数32)=>整数32;
函数 OleDuplicateData(整数32,整数32,整数32)=>整数32;
函数 OleFlushClipboard()=>整数32;
函数 OleGetAutoConvert(整数32,整数32)=>整数32;
函数 OleGetClipboard(整数32)=>整数32;
函数 OleGetIconOfClass(整数32,整数32,整数32)=>整数32;
函数 OleGetIconOfFile(整数32,整数32)=>整数32;
函数 OleInitialize(整数32)=>整数32;
函数 OleInitializeWOW(整数32,整数32)=>整数32;
函数 OleIsCurrentClipboard(整数32)=>整数32;
函数 OleIsRunning(整数32)=>整数32;
函数 OleLoad(整数32,整数32,整数32,整数32)=>整数32;
函数 OleLoadFromStream(整数32,整数32,整数32)=>整数32;
函数 OleLockRunning(整数32,整数32,整数32)=>整数32;
函数 OleMetafilePictFromIconAndLabel(整数32,整数32,整数32,整数32)=>整数32;
函数 OleNoteObjectVisible(整数32,整数32)=>整数32;
函数 OleQueryCreateFromData(整数32)=>整数32;
函数 OleQueryLinkFromData(整数32)=>整数32;
函数 OleRegEnumFormatEtc(整数32,整数32,整数32)=>整数32;
函数 OleRegEnumVerbs(整数32,整数32)=>整数32;
函数 OleRegGetMiscStatus(整数32,整数32,整数32)=>整数32;
函数 OleRegGetUserType(整数32,整数32,整数32)=>整数32;
函数 OleRun(整数32)=>整数32;
函数 OleSave(整数32,整数32,整数32)=>整数32;
函数 OleSaveToStream(整数32,整数32)=>整数32;
函数 OleSetAutoConvert(整数32,整数32)=>整数32;
函数 OleSetClipboard(整数32)=>整数32;
函数 OleSetContainedObject(整数32,整数32)=>整数32;
函数 OleSetMenuDescriptor(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 OleTranslateAccelerator(整数32,整数32,整数32)=>整数32;
函数 OleUninitialize()=>整数32;
函数 OpenOrCreateStream(整数32,整数32,整数32)=>整数32;
函数 ProgIDFromCLSID(整数32,整数32)=>整数32;
函数 PropStgNameToFmtId(整数32,整数32)=>整数32;
函数 PropSysAllocString(整数32)=>整数32;
函数 PropSysFreeString(整数32)=>整数32;
函数 PropVariantClear(整数32)=>整数32;
函数 PropVariantCopy(整数32,整数32)=>整数32;
函数 ReadClassStg(整数32,整数32)=>整数32;
函数 ReadClassStm(整数32,整数32)=>整数32;
函数 ReadFmtUserTypeStg(整数32,整数32,整数32)=>整数32;
函数 ReadOleStg(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ReadStringStream(整数32,整数32)=>整数32;
函数 RegisterDragDrop(整数32,整数32)=>整数32;
函数 ReleaseStgMedium(整数32)=>整数32;
函数 RevokeDragDrop(整数32)=>整数32;
函数 SNB_UserFree(整数32,整数32)=>整数32;
函数 SNB_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 SNB_UserSize(整数32,整数32,整数32)=>整数32;
函数 SNB_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 STGMEDIUM_UserFree(整数32,整数32)=>整数32;
函数 STGMEDIUM_UserMarshal(整数32,整数32,整数32)=>整数32;
函数 STGMEDIUM_UserSize(整数32,整数32,整数32)=>整数32;
函数 STGMEDIUM_UserUnmarshal(整数32,整数32,整数32)=>整数32;
函数 SetConvertStg(整数32,整数32)=>整数32;
函数 SetDocumentBitStg(整数32,整数32)=>整数32;
函数 StgConvertPropertyToVariant(整数32,整数32,整数32,整数32)=>整数32;
函数 StgConvertVariantToProperty(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgCreateDocfile(整数32,整数32,整数32,整数32)=>整数32;
函数 StgCreateDocfileOnILockBytes(整数32,整数32,整数32,整数32)=>整数32;
函数 StgCreatePropSetStg(整数32,整数32,整数32)=>整数32;
函数 StgCreatePropStg(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgCreateStorageEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgGetIFillLockBytesOnFile(整数32,整数32)=>整数32;
函数 StgGetIFillLockBytesOnILockBytes(整数32,整数32)=>整数32;
函数 StgIsStorageFile(整数32)=>整数32;
函数 StgIsStorageILockBytes(整数32)=>整数32;
函数 StgOpenAsyncDocfileOnIFillLockBytes(整数32,整数32,整数32,整数32)=>整数32;
函数 StgOpenPropStg(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgOpenStorage(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgOpenStorageEx(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgOpenStorageOnILockBytes(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StgPropertyLengthAsVariant(整数32,整数32,整数32,整数32)=>整数32;
函数 StgSetTimes(整数32,整数32,整数32,整数32)=>整数32;
函数 StringFromCLSID(整数32,整数32)=>整数32;
函数 StringFromGUID2(整数32,整数32,整数32)=>整数32;
函数 StringFromIID(整数32,整数32)=>整数32;
函数 UpdateDCOMSettings()=>整数32;
函数 UtConvertDvtd16toDvtd32(整数32,整数32,整数32)=>整数32;
函数 UtConvertDvtd32toDvtd16(整数32,整数32,整数32)=>整数32;
函数 UtGetDvtd16Info(整数32,整数32)=>整数32;
函数 UtGetDvtd32Info(整数32,整数32)=>整数32;
函数 WdtpInterfacePointer_UserFree(整数32)=>整数32;
函数 WdtpInterfacePointer_UserMarshal(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 WdtpInterfacePointer_UserSize(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 WdtpInterfacePointer_UserUnmarshal(整数32,整数32,整数32,整数32)=>整数32;
函数 WriteClassStg(整数32,整数32)=>整数32;
函数 WriteClassStm(整数32,整数32)=>整数32;
函数 WriteFmtUserTypeStg(整数32,整数32,整数32)=>整数32;
函数 WriteOleStg(整数32,整数32,整数32,整数32)=>整数32;
函数 WriteStringStream(整数32,整数32)=>整数32;

}
