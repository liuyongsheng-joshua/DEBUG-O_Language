//选项对话框文件

宏定义
{
    定时器事件编号  100
}
 
.数据段
{    
    双字  定时器ID
    双字  h进度条句柄
    双字  进度条剩余长度
    字节  字符串缓冲区..64
}

.只读段
{
    字节 树根结点..     = "根结点"
    字节 树根结点2..    = "根结点2"
    字节 子结点1..      = "子结点1"
    字节 子结点2..      = "子结点2"
    字节 子结点3..      = "子结点3"
    字节 子结点4..      = "子结点4"
    字节 子结点5..      = "子结点5"
    字节 子结点6..      = "子结点6"
    字节 子结点7..      = "子结点7"

    字节 编辑框文本..   = "我是一个编辑框"
    字节 组合框选项1..  = "第一个选项"
    字节 组合框选项2..  = "第二个选项"
    字节 组合框选项3..  = "第三个选项"
    字节 组合框选项4..  = "第四个选项"
    字节 组合框选项5..  = "第五个选项"
    
    字节 列表框列1..    = "姓名"
    字节 列表框列2..    = "性别"
    字节 列表框列3..    = "年龄"
    字节 第一行姓名..   = "张三"
    字节 第一行姓别..   = "男"
    字节 第一行年龄..   = "18"
    字节 第二行姓名..   = "李四"
    字节 第二行姓别..   = "男"
    字节 第二行年龄..   = "25"
    字节 第三行姓名..   = "小红"
    字节 第三行姓别..   = "女"
    字节 第三行年龄..   = "20"
}

.代码段
{
    函数 构建选项对话框(双字 h父窗口句柄)
    {
        创建对话框参数(模块句柄,IDD_OPTION,h父窗口句柄,选项对话框过程,0)        
    }
    
    函数 选项对话框过程(双字 句柄,双字 消息,双字 消息参数一,双字 消息参数二)
    {<基数32,的址32,源址32>
        
        累加32 = 消息
        如果(累加32 == 消息_INITDIALOG) //对话框初始化消息
        {
            //初始化树控件
            初始化树控件(句柄)
                                 
            //初始化组合框控件
            发送对话框子项消息(句柄,IDC_COMBO1,组合框_ADDSTRING,0,取地址 组合框选项1)
            发送对话框子项消息(句柄,IDC_COMBO1,组合框_ADDSTRING,0,取地址 组合框选项2)
            发送对话框子项消息(句柄,IDC_COMBO1,组合框_ADDSTRING,0,取地址 组合框选项3)
            发送对话框子项消息(句柄,IDC_COMBO1,组合框_ADDSTRING,0,取地址 组合框选项4)
            发送对话框子项消息(句柄,IDC_COMBO1,组合框_ADDSTRING,0,取地址 组合框选项5)
            发送对话框子项消息(句柄,IDC_COMBO1,组合框_SETCURSEL,2,0) //选择第三个选项
         
            //初始化编辑框控件
            设置对话框子项文本(句柄,IDC_EDIT1,取地址 编辑框文本)
                           
            //初始化列表控件
            初始化列表控件(句柄)
            
            //初始化进度条            
            获取对话框子项(句柄,IDC_PROGRESS1)  //获取树控件
            h进度条句柄 = 累加32            
            累加32 = 1000            
            累加32 逻辑左移 16
            发送消息(h进度条句柄,PBM_SETRANGE,0,累加32)
            发送消息(h进度条句柄,PBM_SETSTEP,10,0)
            发送消息(h进度条句柄,PBM_SETPOS,100,0)
            进度条剩余长度 = 900
            定时器ID = 0
            
            //使对话框左上角有显示图标
            加载图标(模块句柄,IDI_MAIN)
            发送消息(句柄,消息_SETICON,ICON_BIG,累加32)
        }
        否则如果(累加32 == 消息_CLOSE) //关闭消息
        {
            如果(定时器ID > 0)//窗口关闭前要终止定时器
            {
                终止定时器(句柄,定时器ID)
                定时器ID = 0
            }            
                    
            终止对话框(句柄,0)
        }
        否则如果(累加32 == 消息_COMMAND) //如果是命令消息
        {
            累加32 = 消息参数一
            如果(累加32 == IDOK) //如果是"确定"按钮
            {
            }
            否则如果(累加32 == IDCANCEL) //如果是"取消"按钮
            {
                发送消息(句柄,消息_CLOSE,0,0)
            }   
            否则如果(累加32 == IDC_CHECKBOX1) //如果是"全选"按钮
            {
                //获取列表控件
                双字 h列表控件
                获取对话框子项(句柄,IDC_LIST1)
                h列表控件 = 累加32
                
                双字 n项目数
                发送消息(h列表控件,LVM_GETITEMCOUNT,0,0)
                n项目数 = 累加32
                
                循环(n项目数 > 0)
                {
                    n项目数--
                    
                    列表视图_项 l列表项    
                    
                    对话框按钮被选中(句柄,IDC_CHECKBOX1) //检查按钮是否被选中
                    如果(累加32 == BST_CHECKED) //被选中
                    {
                        l列表项.状态掩码 = LVIS_SELECTED
                        l列表项.状态 = LVIS_SELECTED
                    }
                    否则
                    {
                        l列表项.状态掩码 = LVIS_SELECTED
                        l列表项.状态 = 0
                    }             
                    
                    累加32 @= l列表项
                    发送消息(h列表控件,LVM_SETITEMSTATE,n项目数,累加32)
                }
                
                发送消息(h列表控件,消息_SETFOCUS,0,0)                
            }      
            否则如果(累加32 == IDC_CHECKBOX2) //如果是"开始"按钮
            {
                对话框按钮被选中(句柄,IDC_CHECKBOX2) //检查按钮是否被选中
                如果(累加32 == BST_CHECKED) //被选中
                {
                    设置定时器(句柄,定时器事件编号,100,0)
                    定时器ID = 累加32
                }
                否则
                {
                    终止定时器(句柄,定时器ID)
                    定时器ID = 0
                }
            }
            否则如果(累加16 == IDC_CHECKBOX3) //如果是"总在最前面"按钮
            {
                对话框按钮被选中(句柄,IDC_CHECKBOX3) //检查按钮是否被选中
                如果(累加32 == BST_CHECKED) //被选中
                {
                    设置窗体位置(句柄,HWND_TOPMOST,0,0,0,0,SWP_NOMOVE | SWP_NOSIZE)
                }
                否则
                {                    
                    设置窗体位置(句柄,HWND_NOTOPMOST,0,0,0,0,SWP_NOMOVE | SWP_NOSIZE)
                }
            }
        }
        否则如果(累加32 == 消息_TIMER) //如果是定时器
        {               
            发送消息(h进度条句柄,PBM_STEPIT,0,0)
            进度条剩余长度 -= 10
            如果(进度条剩余长度 == 0) //当进度条走完时重新开始
            {               
                发送消息(h进度条句柄,PBM_SETPOS,0,0)
                进度条剩余长度 = 1000
            }
        }
        否则如果(累加32 == 消息_NOTIFY) //如果是通知消息
        {            
            如果(消息参数一 == IDC_LIST1)//如果是列表视图控件
            {
                基数32 = 消息参数二   ∥ 得到列表窗口的 NMHDR 指针参数
                ∥NM_DBLCLK 这里的&取地址操作符是取得结构体子成员的偏移量
                如果([双字|基数32 + &NMHDR.code] == NM_DBLCLK) //如果是项目被双击
                {
                    列表视图_项 l列表项
                    双字 h列表控件
                    压栈 [双字|基数32 + &NMHDR.hwndFrom]
                    出栈 h列表控件
                    发送消息(h列表控件, LVM_GETNEXTITEM, -1, LVNI_FOCUSED) //得到当前项
                    l列表项.项序号 = 累加32
                    l列表项.子项序号 = 0      //第一个子项
                    l列表项.掩码 = LVIF_TEXT  //指示得到文本                    
                    l列表项.文本指针 = 取地址 字符串缓冲区 //保存文本的缓冲区
                    l列表项.文本最大长度 = 64 
                    累加32 @= l列表项
                    发送消息(h列表控件, LVM_GETITEM, 0, 累加32) //得到项信息
                    提示框(句柄,取地址 字符串缓冲区,取地址 列表框列1,信息框_OK)
                }
            }
        }
        否则
        {
            返回  假
        }        
        
        返回  真
    }
    
    函数 初始化树控件(双字 h父窗口句柄)
    {
        //获取树控件
        双字 h树控件
        获取对话框子项(h父窗口句柄,IDC_TREE1)
        h树控件 = 累加32
            
        ∥得到图像列表
        双字 h图像列表,h位图句柄
        图像列表_创建(16, 16, ILC_COLOR16, 5, 10)
        h图像列表 = 累加32
        加载位图(模块句柄, IDB_TREE)
        h位图句柄 = 累加32
        图像列表_添加(h图像列表, h位图句柄, NULL)
        删除对象(h位图句柄)
            
        ∥如果你不想让树控件项目有图标显示就注释到下一行
        发送消息(h树控件, TVM_SETIMAGELIST, 0, h图像列表)
           
        双字 h根结点句柄
        双字 h树子结点1
        双字 h树子结点2      
        双字 h树子结点3      
        双字 h树子结点4      
        双字 h树子结点5      
        双字 h树子结点6   
        
        树视图_插入结构  t树插入
                
        //插入根结点
        t树插入.h父结点 = 0   
        t树插入.h在结点之后 = TVI_ROOT
        t树插入.项类型.项.掩码 = TVIF_TEXT | TVIF_IMAGE | TVIF_SELECTEDIMAGE
        t树插入.项类型.项.文本指针 = 取地址 树根结点
        t树插入.项类型.项.图像序号 = 0
        t树插入.项类型.项.选中时图像 = 1
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0,累加32)
        h根结点句柄 = 累加32
            
        t树插入.h父结点 = 累加32
        t树插入.h在结点之后 = TVI_LAST
        t树插入.项类型.项.文本指针 = 取地址 子结点1
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        h树子结点1 = 累加32

        t树插入.项类型.项.文本指针 = 取地址 子结点2
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        h树子结点2 = 累加32

        t树插入.项类型.项.文本指针 = 取地址 子结点3
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        h树子结点3 = 累加32

        t树插入.h父结点 = 累加32
        t树插入.项类型.项.文本指针 = 取地址 子结点4
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        h树子结点4 = 累加32

        t树插入.项类型.项.文本指针 = 取地址 子结点5
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        h树子结点5 = 累加32

        累加32 = h根结点句柄 
        t树插入.h父结点 = 累加32
        t树插入.项类型.项.文本指针 = 取地址 子结点6
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        h树子结点6 = 累加32

        t树插入.h父结点 = 0   
        t树插入.h在结点之后 = TVI_ROOT
        t树插入.项类型.项.掩码 = TVIF_TEXT | TVIF_IMAGE | TVIF_SELECTEDIMAGE
        t树插入.项类型.项.文本指针 = 取地址 树根结点2
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)
        t树插入.h父结点 = 累加32
        t树插入.项类型.项.文本指针 = 取地址 子结点7
        累加32 @= t树插入
        发送消息(h树控件, TVM_INSERTITEM, 0, 累加32)

        发送消息(h树控件, TVM_EXPAND, TVE_EXPAND, h根结点句柄)
        发送消息(h树控件, TVM_SORTCHILDREN, 0, h根结点句柄)
        发送消息(h树控件, TVM_SELECTITEM, TVGN_CARET, 0)
    }
    
    函数 初始化列表控件(双字 h父窗口句柄)
    {
        //获取列表控件
        双字 h列表控件
        获取对话框子项(h父窗口句柄,IDC_LIST1)
        h列表控件 = 累加32
            
        //添加列表列
        列表视图_列 l列表
        l列表.掩码 = LVCF_TEXT+LVCF_WIDTH
        l列表.文本指针 = 取地址 列表框列1
        l列表.宽度 = 50
        累加32 @= l列表
        发送消息(h列表控件, LVM_INSERTCOLUMN,0,累加32)
        l列表.文本指针 = 取地址 列表框列2
        累加32 @= l列表
        发送消息(h列表控件, LVM_INSERTCOLUMN, 1 ,累加32 )
        l列表.文本指针 = 取地址 列表框列3
        累加32 @= l列表
        发送消息(h列表控件, LVM_INSERTCOLUMN, 2 ,累加32)
            
        列表视图_项 l列表项 
         //插入第一行
        l列表项.掩码 = LVIF_TEXT
        l列表项.项序号 = 0
        l列表项.子项序号 = 0       
        l列表项.文本指针 = 取地址 第一行姓名            
        累加32 @= l列表项
        发送消息(h列表控件, LVM_INSERTITEM,0,累加32)            
        
        l列表项.子项序号 ++
        l列表项.文本指针 = 取地址 第一行姓别
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
            
        l列表项.子项序号 ++
        l列表项.文本指针 = 取地址 第一行年龄
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
        
        //插入第二行        
        l列表项.掩码 = LVIF_TEXT
        l列表项.项序号 = 1
        l列表项.子项序号 = 0
        l列表项.文本指针 = 取地址 第二行姓名
        累加32 @= l列表项
        发送消息(h列表控件, LVM_INSERTITEM,0,累加32)
            
        l列表项.掩码 = LVIF_TEXT
        l列表项.子项序号 ++
        l列表项.文本指针 = 取地址 第二行姓别
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
            
        l列表项.子项序号 ++
        l列表项.文本指针 = 取地址 第二行年龄
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
        
        //插入第三行        
        l列表项.掩码 = LVIF_TEXT
        l列表项.项序号 = 2
        l列表项.子项序号 = 0
        l列表项.文本指针 = 取地址 第三行姓名
        累加32 @= l列表项
        发送消息(h列表控件, LVM_INSERTITEM,0,累加32)
            
        l列表项.掩码 = LVIF_TEXT
        l列表项.子项序号 ++
        l列表项.文本指针 = 取地址 第三行姓别
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
            
        l列表项.子项序号 ++
        l列表项.文本指针 = 取地址 第三行年龄
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
        
        //选择整行风格
        发送消息(h列表控件,LVM_SETEXTENDEDLISTVIEWSTYLE,LVS_EX_FULLROWSELECT,LVS_EX_FULLROWSELECT)
    }
    
    /*------------------------关于对话框-----------------------------*/
    
    函数 构建关于对话框(双字 h父窗口句柄)
    {
        对话框参数(模块句柄,IDD_ABOUT,h父窗口句柄,关于对话框过程,0)
    }   
    
    函数 关于对话框过程(双字 句柄,双字 消息,双字 消息参数一,双字 消息参数二)
    {<基数32,的址32,源址32>
                
        累加32 = 消息
        如果(累加32 == 消息_INITDIALOG) //对话框初始化消息
        {
            //使对话框左上角有显示图标
            加载图标(模块句柄,IDI_MAIN)
            发送消息(句柄,消息_SETICON,ICON_BIG,累加32)
        }
        否则如果(累加32 == 消息_COMMAND) //命令消息
        {
            如果(消息参数一 == IDOK)
            {
                发送消息(句柄,消息_CLOSE,0,0)
            }
        }
        否则如果(累加32 == 消息_CLOSE) //关闭消息
        {
            终止对话框(句柄,0)
        }
        否则
        {
            返回  假
        }        
        
        返回  真
    }
    
}


