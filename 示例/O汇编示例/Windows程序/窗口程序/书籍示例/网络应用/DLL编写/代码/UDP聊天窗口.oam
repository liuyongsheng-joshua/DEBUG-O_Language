//O汇编文件

.包含文<*oasm32.oah>
.包含文<*.\中文视窗.oah>
.包含文<*.\user32.oah>
.包含文<*.\Kernel32.oah>
.包含文<..\..\网络应用\资源\资源.oah>
.包含文<*.\wsock32.oah>

.引用库<*.\user32.lib>
.引用库<*.\kernel32.lib>
.引用库<*.\wsock32.lib>

宏定义
{
    自消息_SOCKET         消息_USER+0x100
    默认端口              6590
}

.预留段
{
    双字 h套接字    
    字节 接收内容缓冲区..1024
    字节 发送内容缓冲区..1024
}

.代码段
{
    函数 创建UDP聊天窗口:CreateUDPWnd(双字 h对话框句柄)
    {
        获取模块句柄(0)
        创建对话框参数(累加32,IDD_UDP_CHAT,h对话框句柄,UDP聊天对话框过程,0)
    }
    
    函数 UDP聊天对话框过程(双字 句柄,双字 消息,双字 消息参数一,双字 消息参数二)
    {<基数32,的址32,源址32>
        
        累加32 = 消息
        如果(累加32 == 消息_INITDIALOG) //对话框初始化消息
        {               
            初始化用户列表控件(句柄)
            
            //初始化UDP网络套接字
            WSADATA wsa数据
            WSA启动(0x101,&wsa数据) //WSAStartup
            如果(累加32 != 0)
            {
                提示框(句柄,取地址 "初始化套接字动态链接库错误!",取地址 "错误提示",信息框_OK)
            }
            套接字(AF_INET,SOCK_DGRAM,0) //socket UDP模式
            h套接字  = 累加32
            WSA异步选择(h套接字,句柄,自消息_SOCKET,FD_READ | FD_WRITE) //WSAAsyncSelect
            
            sockaddr_in sin套接字
            Rtl内存清零(&sin套接字,取大小 sin套接字)
            主机到网络短整数(默认端口)
            sin套接字.sin_port = 累加16
            sin套接字.sin_family = AF_INET
            sin套接字.sin_addr = INADDR_ANY
            绑定(h套接字,取地址 sin套接字,取大小 sin套接字)
            如果(累加32 ==  SOCKET_ERROR)
            {
                提示框(句柄,取地址 "UDP绑定端口错误!",取地址 "错误提示",信息框_OK)
            }
        }
        否则如果(累加32 == 消息_CLOSE) //关闭消息
        {   
            关闭套接字(h套接字) //closesocket
            WSA清除() //WSACleanup
            终止对话框(句柄,0)
        }
        否则如果(累加32 == 自消息_SOCKET)
        {            
            累加32 = 消息参数二
            如果(累加16 == FD_READ)
            {                
                接收UDP数据(句柄)
            } 
            否则如果(累加16 == FD_WRITE)
            {
            }
        }
        否则如果(累加32 == 消息_COMMAND) //如果是命令消息
        {
            累加32 = 消息参数一
            如果(累加16 == IDC_BUTTON_ADDTO_USER_LIST) //如果是"添加到用户列表"按钮
            {
                添加用户(句柄)                
            }
            否则如果(累加16 == IDC_BUTTON_UDP_SEND) //如果是"发送"按钮
            {
                向所有人发送要说的话(句柄)
            }
        }
        否则
        {
            返回  假
        }        
        
        返回  真
    }
    
    函数 初始化用户列表控件(双字 h对话框句柄)
    {
        //获取列表控件
        双字 h列表控件
        获取对话框子项(h对话框句柄,IDC_LIST_UDP_USER)
        h列表控件 = 累加32
            
        //添加列表列
        列表视图_列 l列表
        l列表.掩码 = LVCF_TEXT+LVCF_WIDTH
        l列表.文本指针 = 取地址 "昵称"
        l列表.宽度 = 50
        累加32 @= l列表
        发送消息(h列表控件, LVM_INSERTCOLUMN,0,累加32)
        l列表.文本指针 = 取地址 "用户地址"
        累加32 @= l列表
        l列表.宽度 = 130
        发送消息(h列表控件, LVM_INSERTCOLUMN, 1 ,累加32 )        
        
        //选择整行风格
        发送消息(h列表控件,LVM_SETEXTENDEDLISTVIEWSTYLE,LVS_EX_FULLROWSELECT,LVS_EX_FULLROWSELECT)
    }
    
    函数 添加用户(双字 h对话框句柄)
    {
        字节 昵称..50
        字节 用户地址..100
                
        获取对话框子项文本(h对话框句柄,IDC_EDIT_UDP_NICKNAME,&昵称,50)
        如果(昵称:0 == 0)//如果字符串为空
        {
            提示框(h对话框句柄,取地址 "昵称不能为空",取地址 "添加用户",信息框_OK)
            返回
        }
        
        获取对话框子项文本(h对话框句柄,IDC_EDIT_UDP_USER_ADDR,&用户地址,100)
        如果(用户地址:0 == 0)//如果字符串为空
        {
            提示框(h对话框句柄,取地址 "用户地址不能为空",取地址 "添加用户",信息框_OK)
            返回
        }
        
        inet_地址(&用户地址)
        如果(累加32 == INADDR_NONE)
        {
            提示框(h对话框句柄,取地址 "用户地址格式不正确",取地址 "添加用户",信息框_OK)
            返回
        }
        
        //获取列表控件
        双字 h列表控件
        获取对话框子项(h对话框句柄,IDC_LIST_UDP_USER)
        h列表控件 = 累加32
        
        双字 n列表项个数
        发送消息(h列表控件,LVM_GETITEMCOUNT,0,0)
        n列表项个数 = 累加32
                
        列表视图_项 l列表项 
         
        l列表项.掩码 = LVIF_TEXT
        压栈 n列表项个数
        出栈 l列表项.项序号
        l列表项.子项序号 = 0
        累加32 @=  昵称
        l列表项.文本指针 = 累加32
        累加32 @= l列表项
        发送消息(h列表控件, LVM_INSERTITEM,0,累加32)
        
        l列表项.子项序号 ++
        累加32 @=  用户地址
        l列表项.文本指针 = 累加32
        累加32 @= l列表项
        发送消息(h列表控件,LVM_SETITEM, 0,累加32)
    }
    
    函数 向所有人发送要说的话(双字 h对话框句柄)
    {   
        字节 我的昵称..100
        字节 说话的内容..100
         
        获取对话框子项文本(h对话框句柄,IDC_EDIT_SELF_NICKNAME,&我的昵称,50)
        如果(我的昵称:0 == 0)//如果字符串为空
        {
            提示框(h对话框句柄,取地址 "自己的称呼的不能为空",取地址 "发送信息",信息框_OK)
            返回
        }
        
        获取对话框子项文本(h对话框句柄,IDC_EDIT_UDP_SAY,&说话的内容,50)
        如果(说话的内容:0 == 0)//如果字符串为空
        {
            提示框(h对话框句柄,取地址 "说话的内容不能为空",取地址 "发送信息",信息框_OK)
            返回
        }
        
        //获取列表控件
        双字 h列表控件
        获取对话框子项(h对话框句柄,IDC_LIST_UDP_USER)
        h列表控件 = 累加32
        
        双字 n当前项,n列表项个数
        发送消息(h列表控件,LVM_GETITEMCOUNT,0,0)
        n列表项个数 = 累加32
        
        字节 昵称..50
        字节 用户地址..100
        n当前项 = 0
        计数32 = n当前项
        循环(计数32 < n列表项个数)
        {
            列表视图_项 l列表项
                    
            //得到昵称
            压栈 n当前项
            出栈 l列表项.项序号
            l列表项.子项序号 = 0      //用户地址列
            l列表项.掩码 = LVIF_TEXT  //指示得到文本  
            累加32 @= 昵称                  
            l列表项.文本指针 = 累加32 //保存文本的缓冲区
            l列表项.文本最大长度 = 50
            累加32 @= l列表项
            发送消息(h列表控件, LVM_GETITEM, 0, 累加32) //得到项信息
            //提示框(h对话框句柄,&昵称,取地址 "用户昵称",信息框_OK)
            
            //得到用户地址
            压栈 n当前项
            出栈 l列表项.项序号
            l列表项.子项序号 = 1      //用户地址列
            l列表项.掩码 = LVIF_TEXT  //指示得到文本  
            累加32 @= 用户地址                  
            l列表项.文本指针 = 累加32 //保存文本的缓冲区
            l列表项.文本最大长度 = 100 
            累加32 @= l列表项
            发送消息(h列表控件, LVM_GETITEM, 0, 累加32) //得到项信息
                        
            字符串复制(取地址 发送内容缓冲区,&我的昵称)
            字符串联接(取地址 发送内容缓冲区,取地址 " 对 ")
            字符串联接(取地址 发送内容缓冲区,&昵称)
            字符串联接(取地址 发送内容缓冲区,取地址 " 说：")
            字符串联接(取地址 发送内容缓冲区,&说话的内容)
            
            //提示框(h对话框句柄,&用户地址,取地址 "用户地址",信息框_OK)
            字符串长度(取地址 发送内容缓冲区)
            发送UDP数据(&用户地址,取地址 发送内容缓冲区,累加32)
            
            n当前项 ++
            计数32 = n当前项
        }
    }
    
    函数 发送UDP数据(双字 用户地址,双字 UDP数据,双字 数据长度)
    {
        sockaddr_in sin套接字
        
        Rtl内存清零(&sin套接字,取大小 sin套接字)
        inet_地址(用户地址)
        sin套接字.sin_addr = 累加32
        sin套接字.sin_family = AF_INET
        主机到网络短整数(默认端口)
        sin套接字.sin_port = 累加16
        
        发送到(h套接字,UDP数据,数据长度,0,&sin套接字,取大小 sockaddr_in)//sendto
    }
    
    函数 接收UDP数据(双字 h对话框句柄)
    {
        双字 n长度
        sockaddr_in sin套接字
        n长度 = 取大小 sin套接字
        Rtl内存清零(取地址 接收内容缓冲区,取大小 接收内容缓冲区) //RtlZeroMemory
        Rtl内存清零(&sin套接字,取大小 sin套接字) //RtlZeroMemory
                
        接收自(h套接字,取地址 接收内容缓冲区,取大小 接收内容缓冲区,0,&sin套接字,&n长度) //recvfrom
        如果(累加32 == SOCKET_ERROR)
        {
        }
        否则如果(累加32 > 0)
        {
            字符串联接(取地址 接收内容缓冲区,取地址 "\n") //在最后添加回车符
            发送对话框子项消息(h对话框句柄,IDC_EDIT_UDP_CHAT_CONTENT,EM_SETSEL,-1,-1)
            发送对话框子项消息(h对话框句柄,IDC_EDIT_UDP_CHAT_CONTENT,EM_REPLACESEL,0,取地址 接收内容缓冲区)
        }
    }
}
