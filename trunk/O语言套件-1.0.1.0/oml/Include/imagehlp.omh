引用段
{
函数 BindImage(整数32,整数32,整数32)=>整数32;
函数 BindImageEx(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 CheckSumMappedFile(整数32,整数32,整数32,整数32)=>整数32;
函数 EnumDirTree(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 EnumerateLoadedModules64(整数32,整数32,整数32)=>整数32;
函数 EnumerateLoadedModules(整数32,整数32,整数32)=>整数32;
函数 FindDebugInfoFile(整数32,整数32,整数32)=>整数32;
函数 FindDebugInfoFileEx(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 FindExecutableImage(整数32,整数32,整数32)=>整数32;
函数 FindExecutableImageEx(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 FindFileInPath(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 FindFileInSearchPath(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 GetImageConfigInformation(整数32,整数32)=>整数32;
函数 GetImageUnusedHeaderBytes(整数32,整数32)=>整数32;
函数 GetTimestampForLoadedLibrary(整数32)=>整数32;
函数 ImageAddCertificate(整数32,整数32,整数32)=>整数32;
函数 ImageDirectoryEntryToData(整数32,整数32,整数32,整数32)=>整数32;
函数 ImageDirectoryEntryToDataEx(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ImageEnumerateCertificates(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ImageGetCertificateData(整数32,整数32,整数32,整数32)=>整数32;
函数 ImageGetCertificateHeader(整数32,整数32,整数32)=>整数32;
函数 ImageGetDigestStream(整数32,整数32,整数32,整数32)=>整数32;
函数 ImageLoad(整数32,整数32)=>整数32;
函数 ImageNtHeader(整数32)=>整数32;
函数 ImageRemoveCertificate(整数32,整数32)=>整数32;
函数 ImageRvaToSection(整数32,整数32,整数32)=>整数32;
函数 ImageRvaToVa(整数32,整数32,整数32,整数32)=>整数32;
函数 ImageUnload(整数32)=>整数32;
函数 ImagehlpApiVersion()=>整数32;
函数 ImagehlpApiVersionEx(整数32)=>整数32;
函数 MakeSureDirectoryPathExists(整数32)=>整数32;
函数 MapAndLoad(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MapDebugInformation(整数32,整数32,整数32,整数32)=>整数32;
函数 MapFileAndCheckSumA(整数32,整数32,整数32)=>整数32;
函数 MapFileAndCheckSumW(整数32,整数32,整数32)=>整数32;
函数 ReBaseImage64(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 ReBaseImage(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SearchTreeForFile(整数32,整数32,整数32)=>整数32;
函数 SetImageConfigInformation(整数32,整数32)=>整数32;
函数 SplitSymbols(整数32,整数32,整数32,整数32)=>整数32;
函数 StackWalk64(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 StackWalk(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymCleanup(整数32)=>整数32;
函数 SymEnumSym(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumSymbols(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumSymbolsForAddr(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumTypes(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumerateModules64(整数32,整数32,整数32)=>整数32;
函数 SymEnumerateModules(整数32,整数32,整数32)=>整数32;
函数 SymEnumerateSymbols64(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumerateSymbols(整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumerateSymbolsW64(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymEnumerateSymbolsW(整数32,整数32,整数32,整数32)=>整数32;
函数 SymFindFileInPath(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymFromAddr(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymFromName(整数32,整数32,整数32)=>整数32;
函数 SymFunctionTableAccess64(整数32,整数32,整数32)=>整数32;
函数 SymFunctionTableAccess(整数32,整数32)=>整数32;
函数 SymGetLineFromAddr64(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetLineFromAddr(整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetLineFromName64(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetLineFromName(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetLineNext64(整数32,整数32)=>整数32;
函数 SymGetLineNext(整数32,整数32)=>整数32;
函数 SymGetLinePrev64(整数32,整数32)=>整数32;
函数 SymGetLinePrev(整数32,整数32)=>整数32;
函数 SymGetModuleBase64(整数32,整数32,整数32)=>整数32;
函数 SymGetModuleBase(整数32,整数32)=>整数32;
函数 SymGetModuleInfo64(整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetModuleInfo(整数32,整数32,整数32)=>整数32;
函数 SymGetModuleInfoW64(整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetModuleInfoW(整数32,整数32,整数32)=>整数32;
函数 SymGetOptions()=>整数32;
函数 SymGetSearchPath(整数32,整数32,整数32)=>整数32;
函数 SymGetSymFromAddr64(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetSymFromAddr(整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetSymFromName64(整数32,整数32,整数32)=>整数32;
函数 SymGetSymFromName(整数32,整数32,整数32)=>整数32;
函数 SymGetSymNext64(整数32,整数32)=>整数32;
函数 SymGetSymNext(整数32,整数32)=>整数32;
函数 SymGetSymPrev64(整数32,整数32)=>整数32;
函数 SymGetSymPrev(整数32,整数32)=>整数32;
函数 SymGetTypeFromName(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymGetTypeInfo(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymInitialize(整数32,整数32,整数32)=>整数32;
函数 SymLoadModule64(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymLoadModule(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SymMatchFileName(整数32,整数32,整数32,整数32)=>整数32;
函数 SymMatchString(整数32,整数32,整数32)=>整数32;
函数 SymRegisterCallback64(整数32,整数32,整数32,整数32)=>整数32;
函数 SymRegisterCallback(整数32,整数32,整数32)=>整数32;
函数 SymRegisterFunctionEntryCallback64(整数32,整数32,整数32,整数32)=>整数32;
函数 SymRegisterFunctionEntryCallback(整数32,整数32,整数32)=>整数32;
函数 SymSetContext(整数32,整数32,整数32)=>整数32;
函数 SymSetOptions(整数32)=>整数32;
函数 SymSetSearchPath(整数32,整数32)=>整数32;
函数 SymUnDName64(整数32,整数32,整数32)=>整数32;
函数 SymUnDName(整数32,整数32,整数32)=>整数32;
函数 SymUnloadModule64(整数32,整数32,整数32)=>整数32;
函数 SymUnloadModule(整数32,整数32)=>整数32;
函数 TouchFileTimes(整数32,整数32)=>整数32;
函数 UnDecorateSymbolName(整数32,整数32,整数32,整数32)=>整数32;
函数 UnMapAndLoad(整数32)=>整数32;
函数 UnmapDebugInformation(整数32)=>整数32;
函数 UpdateDebugInfoFile(整数32,整数32,整数32,整数32)=>整数32;
函数 UpdateDebugInfoFileEx(整数32,整数32,整数32,整数32,整数32)=>整数32;

宏定义 MapFileAndCheckSum  MapFileAndCheckSumA
}
