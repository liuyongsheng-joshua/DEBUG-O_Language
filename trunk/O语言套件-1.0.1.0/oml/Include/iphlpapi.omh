引用段
{
函数 AddIPAddress(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetArpEntTableFromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetIfTableFromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetIpAddrTableFromStack(整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetIpForwardTableFromStack(整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetIpNetTableFromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetTcpExTable2FromStack(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetTcpExTableFromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetTcpTableFromStack(整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetUdpExTable2FromStack(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetUdpExTableFromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 AllocateAndGetUdpTableFromStack(整数32,整数32,整数32,整数32)=>整数32;
函数 CancelIPChangeNotify(整数32)=>整数32;
函数 CancelSecurityHealthChangeNotify(整数32)=>整数32;
函数 CreateIpForwardEntry(整数32)=>整数32;
函数 CreateIpNetEntry(整数32)=>整数32;
函数 CreateProxyArpEntry(整数32,整数32,整数32)=>整数32;
函数 DeleteIPAddress(整数32)=>整数32;
函数 DeleteIpForwardEntry(整数32)=>整数32;
函数 DeleteIpNetEntry(整数32)=>整数32;
函数 DeleteProxyArpEntry(整数32,整数32,整数32)=>整数32;
函数 DisableMediaSense(整数32,整数32)=>整数32;
函数 EnableRouter(整数32,整数32)=>整数32;
函数 FlushIpNetTable(整数32)=>整数32;
函数 FlushIpNetTableFromStack(整数32)=>整数32;
函数 GetAdapterIndex(整数32,整数32)=>整数32;
函数 GetAdapterOrderMap()=>整数32;
函数 GetAdaptersAddresses(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 GetAdaptersInfo(整数32,整数32)=>整数32;
函数 GetBestInterface(整数32,整数32)=>整数32;
函数 GetBestInterfaceEx(整数32,整数32)=>整数32;
函数 GetBestInterfaceFromStack(整数32,整数32)=>整数32;
函数 GetBestRoute(整数32,整数32,整数32)=>整数32;
函数 GetBestRouteFromStack(整数32,整数32,整数32)=>整数32;
函数 GetExtendedTcpTable(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 GetExtendedUdpTable(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 GetFriendlyIfIndex(整数32)=>整数32;
函数 GetIcmpStatistics(整数32)=>整数32;
函数 GetIcmpStatisticsEx(整数32,整数32)=>整数32;
函数 GetIcmpStatsFromStack(整数32)=>整数32;
函数 GetIcmpStatsFromStackEx(整数32,整数32)=>整数32;
函数 GetIfEntry(整数32)=>整数32;
函数 GetIfEntryFromStack(整数32,整数32,整数32)=>整数32;
函数 GetIfTable(整数32,整数32,整数32)=>整数32;
函数 GetIfTableFromStack(整数32,整数32,整数32,整数32)=>整数32;
函数 GetIgmpList(整数32,整数32,整数32)=>整数32;
函数 GetInterfaceInfo(整数32,整数32)=>整数32;
函数 GetIpAddrTable(整数32,整数32,整数32)=>整数32;
函数 GetIpAddrTableFromStack(整数32,整数32,整数32)=>整数32;
函数 GetIpErrorString(整数32,整数32,整数32)=>整数32;
函数 GetIpForwardTable(整数32,整数32,整数32)=>整数32;
函数 GetIpForwardTableFromStack(整数32,整数32,整数32)=>整数32;
函数 GetIpNetTable(整数32,整数32,整数32)=>整数32;
函数 GetIpNetTableFromStack(整数32,整数32,整数32,整数32)=>整数32;
函数 GetIpStatistics(整数32)=>整数32;
函数 GetIpStatisticsEx(整数32,整数32)=>整数32;
函数 GetIpStatsFromStack(整数32)=>整数32;
函数 GetIpStatsFromStackEx(整数32,整数32)=>整数32;
函数 GetNetworkParams(整数32,整数32)=>整数32;
函数 GetNumberOfInterfaces(整数32)=>整数32;
函数 GetOwnerModuleFromTcp6Entry(整数32,整数32,整数32,整数32)=>整数32;
函数 GetOwnerModuleFromTcpEntry(整数32,整数32,整数32,整数32)=>整数32;
函数 GetOwnerModuleFromUdp6Entry(整数32,整数32,整数32,整数32)=>整数32;
函数 GetOwnerModuleFromUdpEntry(整数32,整数32,整数32,整数32)=>整数32;
函数 GetPerAdapterInfo(整数32,整数32,整数32)=>整数32;
函数 GetRTTAndHopCount(整数32,整数32,整数32,整数32)=>整数32;
函数 GetTcpExTable2FromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 GetTcpStatistics(整数32)=>整数32;
函数 GetTcpStatisticsEx(整数32,整数32)=>整数32;
函数 GetTcpStatsFromStack(整数32)=>整数32;
函数 GetTcpStatsFromStackEx(整数32,整数32)=>整数32;
函数 GetTcpTable(整数32,整数32,整数32)=>整数32;
函数 GetTcpTableFromStack(整数32,整数32,整数32)=>整数32;
函数 GetUdpExTable2FromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 GetUdpStatistics(整数32)=>整数32;
函数 GetUdpStatisticsEx(整数32,整数32)=>整数32;
函数 GetUdpStatsFromStack(整数32)=>整数32;
函数 GetUdpStatsFromStackEx(整数32,整数32)=>整数32;
函数 GetUdpTable(整数32,整数32,整数32)=>整数32;
函数 GetUdpTableFromStack(整数32,整数32,整数32)=>整数32;
函数 GetUniDirectionalAdapterInfo(整数32,整数32)=>整数32;
函数 Icmp6CreateFile()=>整数32;
函数 Icmp6ParseReplies(整数32,整数32)=>整数32;
函数 Icmp6SendEcho2(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 IcmpCloseHandle(整数32)=>整数32;
函数 IcmpCreateFile()=>整数32;
函数 IcmpParseReplies(整数32,整数32)=>整数32;
函数 IcmpSendEcho2(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 IcmpSendEcho(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 InternalCreateIpForwardEntry(整数32)=>整数32;
函数 InternalCreateIpNetEntry(整数32)=>整数32;
函数 InternalDeleteIpForwardEntry(整数32)=>整数32;
函数 InternalDeleteIpNetEntry(整数32)=>整数32;
函数 InternalGetIfTable(整数32,整数32,整数32)=>整数32;
函数 InternalGetIpAddrTable(整数32,整数32,整数32)=>整数32;
函数 InternalGetIpForwardTable(整数32,整数32,整数32)=>整数32;
函数 InternalGetIpNetTable(整数32,整数32,整数32)=>整数32;
函数 InternalGetTcpTable(整数32,整数32,整数32)=>整数32;
函数 InternalGetUdpTable(整数32,整数32,整数32)=>整数32;
函数 InternalSetIfEntry(整数32)=>整数32;
函数 InternalSetIpForwardEntry(整数32)=>整数32;
函数 InternalSetIpNetEntry(整数32)=>整数32;
函数 InternalSetIpStats(整数32)=>整数32;
函数 InternalSetTcpEntry(整数32)=>整数32;
函数 IpReleaseAddress(整数32)=>整数32;
函数 IpRenewAddress(整数32)=>整数32;
函数 IsLocalAddress(整数32)=>整数32;
函数 NTPTimeToNTFileTime(整数32,整数32,整数32)=>整数32;
函数 NTTimeToNTPTime(整数32,整数32)=>整数32;
函数 NhGetGuidFromInterfaceName(整数32,整数32,整数32,整数32)=>整数32;
函数 NhGetInterfaceNameFromDeviceGuid(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 NhGetInterfaceNameFromGuid(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 NhpAllocateAndGetInterfaceInfoFromStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 NhpGetInterfaceIndexFromStack(整数32,整数32)=>整数32;
函数 NotifyAddrChange(整数32,整数32)=>整数32;
函数 NotifyRouteChange(整数32,整数32)=>整数32;
函数 NotifyRouteChangeEx(整数32,整数32,整数32)=>整数32;
函数 NotifySecurityHealthChange(整数32,整数32,整数32)=>整数32;
函数 PfAddFiltersToInterface(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 PfAddGlobalFilterToInterface(整数32,整数32)=>整数32;
函数 PfBindInterfaceToIPAddress(整数32,整数32,整数32)=>整数32;
函数 PfBindInterfaceToIndex(整数32,整数32,整数32,整数32)=>整数32;
函数 PfCreateInterface(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 PfDeleteInterface(整数32)=>整数32;
函数 PfDeleteLog()=>整数32;
函数 PfGetInterfaceStatistics(整数32,整数32,整数32,整数32)=>整数32;
函数 PfMakeLog(整数32)=>整数32;
函数 PfRebindFilters(整数32,整数32)=>整数32;
函数 PfRemoveFilterHandles(整数32,整数32,整数32)=>整数32;
函数 PfRemoveFiltersFromInterface(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 PfRemoveGlobalFilterFromInterface(整数32,整数32)=>整数32;
函数 PfSetLogBuffer(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 PfTestPacket(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 PfUnBindInterface(整数32)=>整数32;
函数 RestoreMediaSense(整数32,整数32)=>整数32;
函数 SendARP(整数32,整数32,整数32,整数32)=>整数32;
函数 SetAdapterIpAddress(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SetBlockRoutes(整数32,整数32,整数32)=>整数32;
函数 SetIfEntry(整数32)=>整数32;
函数 SetIfEntryToStack(整数32,整数32)=>整数32;
函数 SetIpForwardEntry(整数32)=>整数32;
函数 SetIpForwardEntryToStack(整数32)=>整数32;
函数 SetIpMultihopRouteEntryToStack(整数32)=>整数32;
函数 SetIpNetEntry(整数32)=>整数32;
函数 SetIpNetEntryToStack(整数32,整数32)=>整数32;
函数 SetIpRouteEntryToStack(整数32)=>整数32;
函数 SetIpStatistics(整数32)=>整数32;
函数 SetIpStatsToStack(整数32)=>整数32;
函数 SetIpTTL(整数32)=>整数32;
函数 SetProxyArpEntryToStack(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 SetRouteWithRef(整数32)=>整数32;
函数 SetTcpEntry(整数32)=>整数32;
函数 SetTcpEntryToStack(整数32)=>整数32;
函数 UnenableRouter(整数32,整数32)=>整数32;
函数 do_echo_rep(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 do_echo_req(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 register_icmp()=>整数32;

}
