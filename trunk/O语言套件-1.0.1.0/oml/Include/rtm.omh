引用段
{
函数 BestMatchInTable(整数32,整数32,整数32)=>整数32;
函数 CheckTable(整数32)=>整数32;
函数 CreateTable(整数32,整数32)=>整数32;
函数 DeleteFromTable(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 DestroyTable(整数32)=>整数32;
函数 DumpTable(整数32,整数32)=>整数32;
函数 EnumOverTable(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 InsertIntoTable(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MgmAddGroupMembershipEntry(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MgmDeInitialize()=>整数32;
函数 MgmDeRegisterMProtocol(整数32)=>整数32;
函数 MgmDeleteGroupMembershipEntry(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGetFirstMfe(整数32,整数32,整数32)=>整数32;
函数 MgmGetFirstMfeStats(整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGetMfe(整数32,整数32,整数32)=>整数32;
函数 MgmGetMfeStats(整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGetNextMfe(整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGetNextMfeStats(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGetProtocolOnInterface(整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGroupEnumerationEnd(整数32)=>整数32;
函数 MgmGroupEnumerationGetNext(整数32,整数32,整数32,整数32)=>整数32;
函数 MgmGroupEnumerationStart(整数32,整数32,整数32)=>整数32;
函数 MgmInitialize(整数32,整数32)=>整数32;
函数 MgmRegisterMProtocol(整数32,整数32,整数32,整数32)=>整数32;
函数 MgmReleaseInterfaceOwnership(整数32,整数32,整数32)=>整数32;
函数 MgmTakeInterfaceOwnership(整数32,整数32,整数32)=>整数32;
函数 NextMatchInTable(整数32,整数32,整数32)=>整数32;
函数 RtmAddNextHop(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmAddRoute(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmAddRouteToDest(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmBlockConvertRoutesToStatic(整数32,整数32,整数32)=>整数32;
函数 RtmBlockDeleteRoutes(整数32,整数32,整数32)=>整数32;
函数 RtmBlockMethods(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmBlockSetRouteEnable(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmCloseEnumerationHandle(整数32)=>整数32;
函数 RtmCreateDestEnum(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmCreateEnumerationHandle(整数32,整数32,整数32)=>整数32;
函数 RtmCreateNextHopEnum(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmCreateRouteEnum(整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmCreateRouteList(整数32,整数32)=>整数32;
函数 RtmCreateRouteListEnum(整数32,整数32,整数32)=>整数32;
函数 RtmCreateRouteTable(整数32,整数32)=>整数32;
函数 RtmDeleteEnumHandle(整数32,整数32)=>整数32;
函数 RtmDeleteNextHop(整数32,整数32,整数32)=>整数32;
函数 RtmDeleteRoute(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmDeleteRouteList(整数32,整数32)=>整数32;
函数 RtmDeleteRouteTable(整数32)=>整数32;
函数 RtmDeleteRouteToDest(整数32,整数32,整数32)=>整数32;
函数 RtmDequeueRouteChangeMessage(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmDereferenceHandles(整数32,整数32,整数32)=>整数32;
函数 RtmDeregisterClient(整数32)=>整数32;
函数 RtmDeregisterEntity(整数32)=>整数32;
函数 RtmDeregisterFromChangeNotification(整数32,整数32)=>整数32;
函数 RtmEnumerateGetNextRoute(整数32,整数32)=>整数32;
函数 RtmFindNextHop(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetAddressFamilyInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetChangeStatus(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetChangedDests(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetDestInfo(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetEntityInfo(整数32,整数32,整数32)=>整数32;
函数 RtmGetEntityMethods(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetEnumDests(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetEnumNextHops(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetEnumRoutes(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetExactMatchDestination(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetExactMatchRoute(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetFirstRoute(整数32,整数32,整数32)=>整数32;
函数 RtmGetInstanceInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetInstances(整数32,整数32)=>整数32;
函数 RtmGetLessSpecificDestination(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetListEnumRoutes(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetMostSpecificDestination(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetNetworkCount(整数32)=>整数32;
函数 RtmGetNextHopInfo(整数32,整数32,整数32)=>整数32;
函数 RtmGetNextHopPointer(整数32,整数32,整数32)=>整数32;
函数 RtmGetNextRoute(整数32,整数32,整数32)=>整数32;
函数 RtmGetOpaqueInformationPointer(整数32,整数32,整数32)=>整数32;
函数 RtmGetRegisteredEntities(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetRouteAge(整数32)=>整数32;
函数 RtmGetRouteInfo(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmGetRoutePointer(整数32,整数32,整数32)=>整数32;
函数 RtmHoldDestination(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmIgnoreChangedDests(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmInsertInRouteList(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmInvokeMethod(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmIsBestRoute(整数32,整数32,整数32)=>整数32;
函数 RtmIsMarkedForChangeNotification(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmIsRoute(整数32,整数32,整数32)=>整数32;
函数 RtmLockDestination(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmLockNextHop(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmLockRoute(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmLookupIPDestination(整数32,整数32)=>整数32;
函数 RtmMarkDestForChangeNotification(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmReadAddressFamilyConfig(整数32,整数32,整数32)=>整数32;
函数 RtmReadInstanceConfig(整数32,整数32)=>整数32;
函数 RtmReferenceHandles(整数32,整数32,整数32)=>整数32;
函数 RtmRegisterClient(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmRegisterEntity(整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmRegisterForChangeNotification(整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmReleaseChangedDests(整数32,整数32,整数32,整数32)=>整数32;
函数 RtmReleaseDestInfo(整数32,整数32)=>整数32;
函数 RtmReleaseDests(整数32,整数32,整数32)=>整数32;
函数 RtmReleaseEntities(整数32,整数32,整数32)=>整数32;
函数 RtmReleaseEntityInfo(整数32,整数32)=>整数32;
函数 RtmReleaseNextHopInfo(整数32,整数32)=>整数32;
函数 RtmReleaseNextHops(整数32,整数32,整数32)=>整数32;
函数 RtmReleaseRouteInfo(整数32,整数32)=>整数32;
函数 RtmReleaseRoutes(整数32,整数32,整数32)=>整数32;
函数 RtmUpdateAndUnlockRoute(整数32,整数32,整数32,整数32,整数32,整数32,整数32)=>整数32;
函数 RtmWriteAddressFamilyConfig(整数32,整数32,整数32)=>整数32;
函数 RtmWriteInstanceConfig(整数32,整数32)=>整数32;
函数 SearchInTable(整数32,整数32,整数32,整数32,整数32)=>整数32;

}
