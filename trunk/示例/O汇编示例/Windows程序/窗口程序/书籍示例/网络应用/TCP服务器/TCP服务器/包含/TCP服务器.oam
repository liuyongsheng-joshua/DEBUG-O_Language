//O汇编文件

宏定义
{
    默认端口        7390
    自消息_SOCK     消息_USER+0x100
}

.只读段
{
    字节 提示框标题..      = "服务器端"
    字节 初始化错误..      = "套接字初始化错误!"
    字节 套接字创建错误..  = "套接字创建错误!"
    字节 选择错误..        = "异步选择模式错误!"
    字节 绑定错误..        = "绑定错误!"
    字节 接受错误..        = "拒绝客户请求!"
    字节 用户说..          = " 说: "
    字节 回车符..          = "\n"
}

枚举 发送命令
{
    命令_昵称
    命令_用户列表
    命令_信息
}

.预留段
{
    双字 h套接字
    字节 接收内容缓冲区..1024
    字节 发送内容缓冲区..1024
}

.代码段
{
    函数  初始化套接字(双字 h窗口句柄)
    {        
        WSADATA wsa数据
        sockaddr_in sin套接字
        
        h套接字 = 0
        
        WSA启动(0x101,&wsa数据)//WSAStartup 初始化加载套接字动态链接库
        如果(累加32 != 0)
        {
            提示框(h窗口句柄,取地址 初始化错误,取地址 提示框标题,信息框_OK)            
            返回 假
        }
        
        //创建套接字
        套接字(AF_INET,SOCK_STREAM,0) //socket SOCK_STREAM表示使用TCP协议
        如果(累加32==INVALID_SOCKET)
        {
            提示框(h窗口句柄,取地址 套接字创建错误,取地址 提示框标题,信息框_OK)            
            返回 假
        }
        h套接字 = 累加32
                
        //当一个套接字事件发生时,选择向哪个窗口发送什么通知消息
        WSA异步选择(h套接字,h窗口句柄,自消息_SOCK,FD_ACCEPT) //WSAAsyncSelect
        如果(累加32==SOCKET_ERROR)
        {
            WSA获取最后错误() //WSAGetLastError
            如果(累加32!=WSAEWOULDBLOCK)
            {
                关闭套接字(h套接字) //closesocket
                h套接字 = 0
                提示框(h窗口句柄,取地址 选择错误,取地址 提示框标题,信息框_OK)                
                返回 假
            }
        }
        
        Rtl内存清零(&sin套接字,取大小 sin套接字) //RtlZeroMemory
        主机到网络短整数(默认端口)//htons
        sin套接字.sin_port = 累加16
        sin套接字.sin_family = AF_INET
        sin套接字.sin_addr.S_un = INADDR_ANY
        绑定(h套接字,&sin套接字,取大小 sockaddr_in)//bind 绑定IP地址和端口
        如果(累加32 != 0)
        {
            关闭套接字(h套接字) //closesocket
            h套接字 = 0
            提示框(h窗口句柄,取地址 绑定错误,取地址 提示框标题,信息框_OK)            
            返回 假
        }
        
        //开始监听
        //提示框(h窗口句柄,取地址 "开始监听",取地址 提示框标题,信息框_OK)            
        监听(h套接字,SOMAXCONN) //listen
        
        返回 真
    }
    
    函数 销毁所有(双字 h主窗口句柄)
    {
        //销毁套接字
        如果(h套接字 != 0)
        {
            关闭套接字(h套接字) //closesocket
            h套接字 = 0
        }
        
        双字 n用户个数
        发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETCOUNT,0,0)
        n用户个数 = 累加32
        
        双字 n当前项
        n当前项 = 0
        计数32 = n当前项
        循环(计数32 < n用户个数)
        {
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETITEMDATA,n当前项,0)
            关闭套接字(累加32) //closesocket
            
            n当前项 ++
            计数32 = n当前项
        }
        
        WSA清除() //WSACleanup
    }
    
    函数 套接字消息处理(双字 h主窗口句柄,双字 参数一,双字 参数二)
    {        
        累加32 = 参数二
        如果(累加16==FD_ACCEPT)
        {
            双字 h新套接字
            接受(参数一,0,0)//accept
            h新套接字 = 累加32   
            WSA异步选择(累加32,h主窗口句柄,自消息_SOCK,FD_READ | FD_CLOSE) //WSAAsyncSelect
            如果(累加32 == INVALID_SOCKET)
            {
                关闭套接字(h套接字) //closesocket
                h套接字 = 0
                提示框(h主窗口句柄,取地址 接受错误,取地址 提示框标题,信息框_OK)
                发送消息(h主窗口句柄,消息_CLOSE,0,0)
            }            
        }
        否则如果(累加16==FD_READ)
        {
            接收信息(h主窗口句柄,参数一)
        }
        否则如果(累加16==FD_WRITE)
        {
            
        }
        否则如果(累加16==FD_CLOSE)
        {
            移除用户(h主窗口句柄,参数一)
        }
    }
    
    函数 移除用户(双字 h主窗口句柄,双字 h用户套接字)
    {
        双字 n用户个数
        发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETCOUNT,0,0)
        n用户个数 = 累加32
        
        双字 n当前项
        n当前项 = 0
        计数32 = n当前项
        循环(计数32 < n用户个数)
        {
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETITEMDATA,n当前项,0)
            如果(累加32 == h用户套接字)
            {
                发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_DELETESTRING,n当前项,0)
                发送用户列表(h主窗口句柄) //更新所有用户列表
                跳出
            }
            
            n当前项 ++
            计数32 = n当前项
        }
    }
    
    函数 接收信息(双字 h主窗口句柄,双字 h当前套接字)
    {
        Rtl内存清零(取地址 接收内容缓冲区,1024) //RtlZeroMemory
        接收(h当前套接字,取地址 接收内容缓冲区,1024,0) //recv
        如果(累加32 > 0) //接收到的字节数
        {    
            双字 接收长度
            接收长度 = 累加32
            
            基数32 = 取地址 接收内容缓冲区
            累加32 = [双字|基数32]            
            如果(累加32 == 命令_昵称)
            {
                基数32 += 取大小 命令_昵称
                新增用户(h主窗口句柄,h当前套接字,基数32)
            }
            否则如果(累加32 == 命令_信息)
            {
                基数32 += 取大小 命令_信息
                获取用户聊天信息(h主窗口句柄,h当前套接字,基数32)
            }
        }
    }
    
    函数 新增用户(双字 h主窗口句柄,双字 h当前套接字,双字 用户昵称地址)
    {
        //将用户信息新增到列表框
        发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_ADDSTRING,0,用户昵称地址)
        发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_SETITEMDATA,累加32,h当前套接字)
        
        //用户列表发送给其它用户
        发送用户列表(h主窗口句柄)
    }
    
    函数 发送用户列表(双字 h主窗口句柄)
    {<的址32>        
                
        的址32 = 取地址 发送内容缓冲区
        压栈 命令_用户列表
        出栈 [双字|的址32]
        的址32 += 取大小 命令_用户列表        
        
        双字 n用户个数
        发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETCOUNT,0,0)
        n用户个数 = 累加32
        
        //设置用户个数信息
        设置对话框子项整数值(h主窗口句柄,IDC_STATIC_MEMBER_COUNT,n用户个数,假)
        
        双字 n当前项
        n当前项 = 0
        计数32 = n当前项
        循环(计数32 < n用户个数)
        {
            双字 h用户套接字
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETITEMDATA,n当前项,0)
            h用户套接字 = 累加32
            
            压栈 h用户套接字
            出栈 [双字|的址32]
            的址32 += 取大小 h用户套接字
                        
            字节 用户昵称..50            
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETTEXT,n当前项,&用户昵称)
            字符串复制(的址32,&用户昵称)
            字符串长度(&用户昵称)            
            的址32 += 累加32
            的址32 ++            
            
            n当前项 ++
            计数32 = n当前项
        }
        
        [双字|的址32] = 0
        的址32 += 取大小 双字
        
        的址32 -= 取地址 发送内容缓冲区 //最后的地址减去首地址得到内容长度        
        
        //向所有的用户发送更新用户列表
        n当前项 = 0
        计数32 = n当前项
        循环(计数32 < n用户个数)
        {
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETITEMDATA,n当前项,0)
            发送(累加32,取地址 发送内容缓冲区,的址32,0)  //send
            
            n当前项 ++
            计数32 = n当前项
        }
    }
    
    函数 获取用户聊天信息(双字 h主窗口句柄,双字 h当前套接字,双字 信息地址)
    {
        通过套接字获取用户项(h主窗口句柄,h当前套接字)
        如果(累加32 >= 0)
        {
            字节 文本缓冲区..1024
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETTEXT,累加32,&文本缓冲区)
            字符串联接(&文本缓冲区,取地址 用户说)
            字符串联接(&文本缓冲区,信息地址)
            字符串联接(&文本缓冲区,取地址 回车符)
                        
            发送对话框子项消息(h主窗口句柄,IDC_EDIT_CHAT,EM_SETSEL,-1,-1)
            发送对话框子项消息(h主窗口句柄,IDC_EDIT_CHAT,EM_REPLACESEL,0,&文本缓冲区)
                         
             字符串长度(信息地址)
             基数32 = 信息地址
             基数32 += 累加32
             基数32 ++
             
             //发送给所有用户
             如果([双字|基数32] == 0)
             {                 
                 转发聊天信息(h主窗口句柄,&文本缓冲区,0)
             }
             否则
             {                 
                 转发聊天信息(h主窗口句柄,&文本缓冲区,基数32) //信息发送给私聊用户
                 发送聊天信息给指定用户(h当前套接字,&文本缓冲区) //信息发送给当前用户
             }
        }
    }
    
    函数 通过套接字获取用户项(双字 h主窗口句柄,双字 h当前套接字)
    {
        双字 n用户个数
        发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETCOUNT,0,0)
        n用户个数 = 累加32
        
        双字 n当前项
        n当前项 = 0
        计数32 = n当前项
        循环(计数32 < n用户个数)
        {
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETITEMDATA,n当前项,0)
            如果(累加32 == h当前套接字)
            {
                返回  n当前项
            }
            
            n当前项 ++
            计数32 = n当前项
        }
        
        返回 -1
    }
    
    函数 转发聊天信息(双字 h主窗口句柄,双字 聊天信息,双字 用户套接字列表)
    {<源址32>
        
        如果(用户套接字列表 == 0)//转发给所有用户
        {
            双字 n用户个数
            发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETCOUNT,0,0)
            n用户个数 = 累加32
        
            源址32 = 0
            循环(源址32 < n用户个数)
            {
                发送对话框子项消息(h主窗口句柄,IDC_LIST_MEMBER,列表框_GETITEMDATA,源址32,0)
                发送聊天信息给指定用户(累加32,聊天信息)
                        
                源址32 ++
            }
        } 
        否则
        {
            字节  临时缓冲区..100
            源址32 = 用户套接字列表            
            循环([双字|源址32] != 0)
            {
                累加32 = [双字|源址32]
                发送聊天信息给指定用户(累加32,聊天信息)
                
                源址32 += 取大小 双字
            }
        }
    }
    
    函数 发送聊天信息给指定用户(双字 用户套接字,双字 聊天信息)
    {<的址32>
        
        双字 内容长度
        的址32 = 取地址 发送内容缓冲区
        压栈 命令_信息
        出栈 [双字|的址32]
        的址32 += 取大小 命令_信息
        内容长度 = 取大小 命令_信息
        
        字符串复制(的址32,聊天信息)
        字符串长度(聊天信息)
        内容长度 += 累加32
        内容长度 ++

        发送(用户套接字,取地址 发送内容缓冲区,内容长度,0) //send
    }
}

