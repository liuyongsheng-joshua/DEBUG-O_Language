∥创建简单的窗口

.包含文<*oasm32.oah>
.包含文<*.\中文视窗.oah>
.包含文<*.\user32.oah>
.包含文<*.\Kernel32.oah>
.包含文<..\资源\资源.oah>
.包含文<*.\gdi32.oah>
.包含文<*.\comctl32.oah>
.包含文<*.\comdlg32.oah>
.包含文<*.\oleaut32.oah>
.包含文<*Advapi32.oah>
.包含文<*.\shlwapi.oah>

.引用库<*Kernel32.lib>
.引用库<*user32.lib>
.引用库<*.\gdi32.lib>
.引用库<*.\comctl32.lib>
.引用库<*.\comdlg32.lib>
.引用库<*.\oleaut32.lib>
.引用库<*Advapi32.lib>
.引用库<*.\shlwapi.lib>

.包含文<..\包含\工具栏.oam>
.包含文<..\包含\状态栏.oam>
.包含文<..\包含\编辑框.oam>
.包含文<..\包含\选项对话框.oam>
.包含文<..\包含\文件读写.oam>
.包含文<..\包含\注册表.oam>
//.包含文<..\包含\DLL使用.oah>

//.引用库<..\输出\DLL编写.lib>



宏定义
{
    
    默认坐标X 100
    默认坐标Y 80
    默认宽度  800
    默认高度  600
}



.只读段
{
    字节 窗口类名.. = "MyFirstWinClass"
    字节 窗口标题.. = "O汇编示例--使用DLL"  //把原来的窗口标题"数据库"改为"使用DLL"
    字节 提醒内容.. = "主窗口创建失败"
    字节 提醒标题.. = "警告"
    字节 状态文本.. = "准备就绪"
    
    字节 信息框内容1.. = "点击了新建命令"
    字节 信息框内容2.. = "点击了打开命令"
    字节 信息框内容3.. = "点击了撤销菜单"
    字节 信息框内容4.. = "点击了重做菜单"
    字节 信息框内容5.. = "处理其它命令"
    字节 信息框标题..  = "提示"
    字节 DLL文件名..   = "DLL编写.dll"
    字节 DLL函数名..   = "dll_export_fun"
}

//删除原来的引用段

.数据段
{
    双字  模块句柄    
}

.代码段
{
    入口 主函数()
    {        
        获取模块句柄(0)
        模块句柄 = 累加32
 
        主窗口()
        退出进程(0)
    }
    
    函数 主窗口()
    {        
        窗体结构  我的窗口类
        
        我的窗口类.结构大小 = 取大小 我的窗口类
        我的窗口类.窗口风格 = 类风格_HREDRAW | 类风格_VREDRAW
        我的窗口类.窗口过程 = 消息处理程序
        我的窗口类.类名附加空间 = 0
        我的窗口类.窗口附加空间 = 0

        压栈  模块句柄
        出栈  我的窗口类.实例句柄
        
        获取固有对象(HOLLOW_BRUSH)
        我的窗口类.背景颜色 = 累加32
        //我的窗口类.背景颜色 = 颜色_WINDOW     //把"背景色"改成"颜色_WINDOW"
        我的窗口类.菜单指针 = 0     
        我的窗口类.类名指针 = 取地址  窗口类名
        
        加载图标(模块句柄,IDI_MAIN)
        //加载图标(0,图标ID_APPLICATION)
        我的窗口类.图标句柄 = 累加32
       
        我的窗口类.附加图标 = 累加32

        加载指针(0,指针ID_ARROW)
        我的窗口类.光标句柄 = 累加32
        
        累加32 @= 我的窗口类
        高级注册窗体类(累加32)

        双字  主窗口句柄
        //按下面的风格创建窗口
        高级创建窗体(窗体风格_EX_LEFT,取地址 窗口类名,取地址 窗口标题,窗体风格_OVERLAPPEDWINDOW,默认坐标X,默认坐标Y,默认宽度,默认高度,0,0,模块句柄,0)
        主窗口句柄 = 累加32
        如果(主窗口句柄 == 0)
        {
            提示框(0,取地址 提醒内容,取地址 提醒标题,16)
            返回 0
        }
        
        加载菜单(模块句柄,IDR_MENU_MAIN)  ∥ 菜单 ID
        设置菜单(主窗口句柄,累加32)
                
        显示窗体(主窗口句柄,显示窗体_SHOWNORMAL)
        更新窗体(主窗口句柄)
        
        从命令行中获取文件名(取地址 文件名缓冲区)
        如果(文件名缓冲区:0 != 0) //如果有传入文件名
        {
            读入文件(取地址 文件名缓冲区,h编辑框句柄)
        }
        
        消息结构  消息
        循环(真)
        {
             累加32 @= 消息
             获取消息(累加32,0,0,0)
             如果(累加32==0)
             {
                 跳出
             }
             累加32 @= 消息
             消息翻译(累加32)
             累加32 @= 消息
             消息调度(累加32)
        }        
        
    }//主窗口函数结束
    
    函数 消息处理程序(双字 句柄,双字 消息,双字 消息参数一,双字 消息参数二)
    {<基数32,的址32,源址32>  //这里是对这些寄存器值进行保护的高级写法 
           
        累加32 = 消息
        如果(累加32 == 消息_CREATE) //创建窗口消息
        {
            构建工具条(句柄,IDB_TOOLBAR)  //构建工具条
            构建状态条(句柄)  //构建状态条
            构建编辑框(句柄)  //构建编辑框
            
            //设置第一个状态格文本为"准备就绪"
            发送消息(h状态栏句柄,状态条_SETTEXT,0,取地址 状态文本)
        }
        否则如果(累加32 == 消息_CLOSE)
        {   
            //得到编辑控件修改标识
            发送消息(h编辑框句柄,EM_GETMODIFY,0,0)
            如果(累加32 == 真) //如果被更改
            {
                验证对话框(句柄) 
                如果(累加32 == IDYES) //点击"是"
                {
                    //发送一个保存命令
                    发送消息(句柄,消息_COMMAND,IDM_SAVE,0)
                }
                否则如果(累加32 == IDCANCEL) //点击"取消"
                {
                    返回 0
                }
            }
          
            邮送退出消息(0)
        }
        否则如果(累加32 == 消息_COMMAND) //响应命令消息
        {
            累加32 = 消息参数一
            //新建菜单或者工具条第一个按钮
            如果((累加32 == IDM_NEW) || (累加32 == 50))
            {
                提示框(0,取地址 信息框内容1,取地址 信息框标题,信息框_OK)
            }
            //打开菜单或者工具条第二个按钮
            否则如果((累加32 == IDM_OPEN) || (累加32 == 51))
            {
                填充缓冲区(取地址 文件名缓冲区,取大小 文件名缓冲区,0) //将缓冲区清0
                获取要打开文件的全名(句柄,取地址 打开文件对话框标题,取地址 打开文件对话框过滤)
                //判断文件名获取是否成功
                如果(文件名缓冲区:0 != 0)
                {
                    读入文件(取地址 文件名缓冲区,h编辑框句柄)
                }                
            }
            //保存 菜单或者工具条第三个按钮
            否则如果((累加32 == IDM_SAVE) || (累加32 == 52))
            {
                如果(文件名缓冲区:0 != 0)
                {
                    写入文件(取地址 文件名缓冲区)
                }
                否则
                {
                    文件另存为(句柄)
                }
            }
            //另保为菜单
            否则如果(累加32 == IDM_SAVEAS)
            {
                文件另存为(句柄)
            }
            //撤销菜单
            否则如果(累加32 == IDM_UNDO)
            {
                提示框(0,取地址 信息框内容3,取地址 信息框标题,信息框_OK)
            }
            //重做菜单
            否则如果(累加32 == IDM_REDO)
            {
                提示框(0,取地址 信息框内容4,取地址 信息框标题,信息框_OK)
            }
            //退出菜单 
            否则如果(累加32 == IDM_QUIT)
            {
                发送消息(句柄,消息_CLOSE,0,0) //发送关闭消息
            }
            //选项菜单
            否则如果(累加32 == IDM_OPTION)
            {
                构建选项对话框(0)
            }
            //关联wwd文件 
            否则如果(累加32 == IDM_ASSOCIATE_WWD)
            {
                设置关联()
            }
             //取消关联wwd文件 
            否则如果(累加32 == IDM_UNASSOCIATE_WWD)
            {
                取消关联()
            }
            //关于菜单或者工具栏关于按钮
            否则如果((累加32 == IDM_ABOUT) || (累加32 == 57))
            {
                构建关于对话框(句柄)                
            } 
            //静态调用DLL函数
            否则如果(累加32 == IDM_STATIC_CALL_DLLFUN)
            {
                //动态链接导出函数()
            }
            //动态调用DLL函数
            否则如果(累加32 == IDM_DYNAMIC_CALL_DLLFUN)
            {                
                加载库(取地址 DLL文件名) //LoadLibrary
                如果(累加32 == 0)//加载失败直接返回
                {
                    返回
                }
                双字 hDLL句柄                
                hDLL句柄 = 累加32 //保存DLL模块句柄
                双字 函数地址
                获取过程地址(hDLL句柄,取地址 DLL函数名)//GetProcAddress
                函数地址 = 累加32
                如果(函数地址 != 0)
                {
                    调用 函数地址 //call 函数地址
                }
                
                释放库(hDLL句柄) //FreeLibrary
            }              
        }        
        否则如果(累加32 == 消息_SIZE)
        {
            发送消息(h工具条句柄,工具条_AUTOSIZE,0,0)
            移动窗体(h状态栏句柄,0,0,0,0,真)
            
            矩形结构  r矩形
            双字  n工具条高度
            双字  n状态条高度
            双字  n窗口宽度
            双字  n窗口高度
            
            //得到工具条高度
            累加32 @= r矩形
            获取客户区矩形(h工具条句柄,累加32)
            压栈 r矩形.底
            出栈 n工具条高度     ∥ 工具条高度

            //得到状态条高度
            累加32 @= r矩形
            获取客户区矩形(h状态栏句柄,累加32)
            压栈 r矩形.底
            出栈 n状态条高度     ∥ 状态栏高度
            
            //得到主窗口客户区宽度和高度
            累加32 @= r矩形
            获取客户区矩形(句柄,累加32)
            压栈 r矩形.右
            出栈 n窗口宽度
            压栈 r矩形.底
            出栈 n窗口高度
            
            //将窗口高度减去工具条与状态条高度
            累加32 =  n工具条高度
            n窗口高度 -= 累加32
            累加32 =  n状态条高度
            n窗口高度 -= 累加32

            n工具条高度 += 2
            n窗口高度 -= 2
            
            //调整编辑框位置
            移动窗体(h编辑框句柄,0,n工具条高度,n窗口宽度,n窗口高度,真)
        }
        否则
        {
            默认窗体过程(句柄,消息,消息参数一,消息参数二)
            返回
        }

        累加32^=累加32
    } 

    函数 从命令行中获取文件名(双字 lp字符串)
    {<的址32,源址32>
        
        的址32 = lp字符串 //mov edi,lp字符串
        获取命令行() //GetCommandLine 取命令行参数
        源址32 = 累加32 //mov esi,eax
        累加32 ^= 累加32 //xor eax,eax
        标寄 D 置 0 //cld
        //跳过程序名项，该项可能处在双引号中间
        标签 G1:
            累加低  串等于 [源址32]   //lodsb
            累加低 比较 '"'  //cmp al,'"' 程序名以双引号开始吗？
            不为零?跳转到 G3 //jnz G3
        标签 G2:
            累加低  串等于 [源址32]   //lodsb
            累加低 比较 '"'  //cmp al,'"' 引号表示程序名项的结束
            不为零?跳转到 G2 //jnz G2
        标签 G3:
            累加低  串等于 [源址32]  //lodsb 程序名项和后面的参数间至少有一空白
            累加低 比较 0    //cmp al,0
            为零?跳转到 G7   //jz G7   //如果为0则表示字符串结束,没有传入文件名参数
            累加低 比较 ' '  //cmp al,' '
            不为零?跳转到 G3 //jnz G3
        //跳过空白和制表，指向文件名
        标签 G4:
            累加低  串等于 [源址32] //lodsb
            累加低 比较 0    //cmp al,0
            为零?跳转到 G7   //jz G7
            累加低 比较 ' '  //cmp al,' '
            为零?跳转到 G4   //jz G4
            累加低 比较 9    //cmp al,9
            为零?跳转到 G4   //jz G4
            累加低 比较 '"'  //文件名也是以双引号开始吗？
            不为零?跳转到 G5 //jnz G5
            //[的址32] 串等于 累加低 //stosb 如果要连引号一起保存就不注销这句
        标签 G4p:
            累加低  串等于 [源址32] //lodsb
            
            累加低 比较 '"'  //找到引号就是文件名的结束
            为零?跳转到 G6
            [的址32] 串等于 累加低  //stosb
            跳转到 G4p
            /* 如果要连引号一起保存就用下面语句替换上面语句
            [的址32] 串等于 累加低  //stosb
            累加低 比较 '"'  //找到引号就是文件名的结束
            不为零?跳转到 G4p
            跳转到 G6
            */
        //跳到文件的末尾
        标签 G5:
            [的址32] 串等于 累加低  //stosb  将文件名传输到缓冲区
            累加低  串等于 [源址32] //lodsb
            累加低 比较 0    //cmp al,0
            为零?跳转到 G6   //jz G6
            累加低 比较 ' '  //cmp al,' '
            为零?跳转到 G6   //jz G6
            累加低 比较 9    //cmp al,9
            不为零?跳转到 G5 //jnz G5
        标签 G6:
            累加低 ^= 累加低   //xor al,al 缓冲区中文件名结束
            [的址32] 串等于 累加低  //stosb
            累加32 = lp字符串    //eax=lp字符串
        标签 G7:
            返回
    }


}//代码段结束


