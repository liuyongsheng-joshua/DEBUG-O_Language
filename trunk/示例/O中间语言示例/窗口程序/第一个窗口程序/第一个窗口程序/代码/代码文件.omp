//O中间语言代码文件
//本实例为了测试方便,在使用Windows的API名称时都使用原有的系统英文名称
//这些完全可以用中文名来代替

.包含文<*视窗32.omh>

字符[] 窗口类名 = "MyClass";
字符[] 窗口标题 = "我的第一个程序窗口!";
字符[] 窗口文本 = "祝贺你，成功啦!";
字符[] 窗口创建失败 = "窗口创建失败";
字符[] 按钮类名 = "BUTTON";
字符[] 按钮标题 = "按钮";

整数32 主程序句柄;
整数32 主窗口句柄;

整数32 按钮句柄;
整数32 按钮ID;
   
入口  主函数()
{
    主窗口();
    ExitProcess(0);
}

函数  主窗口()
{
    获取模块句柄(0)=>主程序句柄;
    
    窗体结构 主窗口类;
    RtlZeroMemory(取地址 主窗口类,取大小 主窗口类);
      
    //注册窗口类
    LoadCursor(0,指针ID_ARROW)=>主窗口类.光标句柄;    
    主窗口类.实例句柄 = 主程序句柄;
    主窗口类.结构大小 = 取大小 主窗口类;
    主窗口类.窗口风格 = 类风格_HREDRAW | 类风格_VREDRAW;
    主窗口类.窗口过程 = 主窗口程序;
    主窗口类.背景颜色 = 颜色_WINDOW + 1;
    主窗口类.类名指针 = 取地址 窗口类名;
    RegisterClassEx(取地址 主窗口类);
    
    //建立并显示窗口
    CreateWindowEx(窗体风格_EX_CLIENTEDGE,取地址 窗口类名,取地址 窗口标题,窗体风格_OVERLAPPEDWINDOW,
        100,100,600,400,0,0,主程序句柄,0)=>主窗口句柄;    
    如果(主窗口句柄 == 0)
    {
        整数32 错误代码;
        GetLastError()=>错误代码;
        提示框(0,取地址 窗口创建失败,取地址 窗口标题,0);
        返回;
    }
    ShowWindow(主窗口句柄,显示窗体_SHOWNORMAL);
    UpdateWindow(主窗口句柄);
	
	CreateWindowEx(窗体风格_EX_CLIENTEDGE,取地址 按钮类名,取地址 按钮标题,窗体风格_CHILD | 窗体风格_VISIBLE | BS_PUSHBUTTON,
             50,50,60,40,主窗口句柄,0,主程序句柄,0)=>按钮句柄;
     按钮ID = GetDlgCtrlID(按钮句柄);
             
    MSG 消息;
    整数32 结果状态;
    循环(TRUE)
    {        
        GetMessage(取地址 消息,0,0,0)=>结果状态;
        如果(结果状态 == 0)
        {
           跳出;
        }        
        TranslateMessage(取地址 消息);
        DispatchMessage(取地址 消息);
    }
}

函数 主窗口程序(整数32 窗口句柄,整数32 窗口消息,整数32 参数一,整数32 参数二)=>整数32
{ 
    PAINTSTRUCT 窗口作图结构;
    矩形结构  窗口区域;
    句柄  窗口作图句柄;
    整数32 返回值;
    返回值 = 0;
    如果(窗口消息 == 消息_PAINT)
    {        
        BeginPaint(窗口句柄,取地址 窗口作图结构)=>窗口作图句柄;        
        GetClientRect(窗口句柄,取地址 窗口区域);        
        DrawText(窗口作图句柄,取地址 窗口文本,-1,取地址 窗口区域,DT_SINGLELINE);
        EndPaint(窗口句柄,取地址 窗口作图结构);
    }
    否则如果(窗口消息 == 消息_CREATE)
    {
        
    }
    否则如果(窗口消息 == 消息_CLOSE)
    {
        DestroyWindow(主窗口句柄);
        PostQuitMessage(0);
    }
    否则如果(窗口消息 == 消息_COMMAND)
    {
         如果(参数一 == 按钮ID)
         {
             提示框(0,取地址 "点击了按钮,哈哈",取地址 窗口标题,0);
         }
    }
    否则
    {
        DefWindowProc(窗口句柄,窗口消息,参数一,参数二)=>返回值;
        返回 返回值;
    }
    返回 返回值;
}
